<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[张国健的博客]]></title>
  <subtitle><![CDATA[随遇而安，follow your heart]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://cstzhanggj.github.io/"/>
  <updated>2015-01-21T18:46:57.059Z</updated>
  <id>http://cstzhanggj.github.io/</id>
  
  <author>
    <name><![CDATA[ZhangGuojian]]></name>
    <email><![CDATA[cst.zhanggj@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[令我震惊的英文歌词翻译--《Viva la Vida》]]></title>
    <link href="http://cstzhanggj.github.io/2015/01/15/%E4%BB%A4%E6%88%91%E9%9C%87%E6%83%8A%E7%9A%84%E8%8B%B1%E6%96%87%E6%AD%8C%E8%AF%8D%E7%BF%BB%E8%AF%91-%E3%80%8AViva-la-Vida%E3%80%8B/"/>
    <id>http://cstzhanggj.github.io/2015/01/15/令我震惊的英文歌词翻译-《Viva-la-Vida》/</id>
    <published>2015-01-15T10:53:30.000Z</published>
    <updated>2015-01-18T05:06:58.000Z</updated>
    <content type="html"><![CDATA[<p>我最初是看一下这个视频,认识这首歌的。这个视频的名字叫<a href="http://v.youku.com/v_show/id_XNzUxNTczNDY4/v.swf.html" target="_blank" rel="external">献给暴雪——醒来吧！沉睡的王！</a></p>
<iframe height="498" width="510" src="http://player.youku.com/embed/XNzUxNTczNDY4" frameborder="0" allowfullscreen><br></iframe>



<h3 id="这首歌的歌词如下">这首歌的歌词如下</h3>
<hr>
<blockquote>
<p>Viva La Vida<br>生命无上</p>
<p>I used to rule the world<br>Seas would rise when I gave the word<br>Now in the morning I sleep alone<br>Sweep the streets I used to own<br>大千世界曾由我主宰<br>巨浪也曾因我之命澎湃<br>而今我却在黎明独自入眠<br>在曾属于我的大道落寞徘徊</p>
<p>I used to roll the dice<br>Feel the fear in my enemy’s eyes<br>Listen as the crowd would sing:<br>“Now the old king is dead! Long live the king!”<br>凡人生死曾由我主宰<br>尽情品味惊恐在死敌瞳孔绽开<br>欣然倾听百姓高歌喝彩：<br>“先王亡矣！新王万代！”</p>
<p>One minute I held the key<br>Next the walls were closed on me<br>And I discovered that my castles stand<br>Upon pillars of salt and pillars of sand<br>此刻我手握权位经脉<br>转瞬才知宫墙深似海<br>恍然发现我的城池<br>基底散如盐沙乱似尘埃</p>
<p>I hear Jerusalem bells a ringing<br>Roman Cavalry choirs are singing<br>Be my mirror my sword and shield<br>My missionaries in a foreign field<br>听那耶路撒冷钟声传来<br>罗马骑兵歌声震彻山海<br>担当我的明镜，利剑和盾牌<br>我的传教士屹立边疆之外</p>
<p>For some reason I can’t explain<br>Once you go there was never,<br>never an honest word<br>That was when I ruled the world<br>只因一些缘由我无法释怀<br>一旦你离开这里便不再，<br>不再有逆耳忠言存在<br>而这便是我统治的时代</p>
<p>It was the wicked and wild wind<br>Blew down the doors to let me in.<br>Shattered windows and the sound of drums<br>People couldn’t believe what I’d become<br>凛冽邪风呼啸袭来<br>吹散重门使我深陷阴霾<br>断壁残垣礼崩乐坏<br>世人不敢相信我已当年不再</p>
<p>Revolutionaries wait<br>For my head on a silver plate<br>Just a puppet on a lonely string<br>Oh who would ever want to be king?<br>起义大军翘首期待<br>有朝一日我站上断头台<br>恰如傀儡随吊线寂寞摇摆<br>悲哉，谁又曾渴望万人膜拜？</p>
<p>I hear Jerusalem bells a ringing<br>Roman Cavalry choirs are singing<br>Be my mirror my sword and shield<br>My missionaries in a foreign field<br>听那耶路撒冷钟声传来<br>罗马骑兵歌声震彻山海<br>担当我的明镜，利剑和盾牌<br>我的传教士屹立边疆之外</p>
<p>For some reason I can’t explain<br>I know Saint Peter won’t call my name<br>Never an honest word<br>But that was when I ruled the world<br>只因一些缘由我无法释怀<br>我亦知天堂之门不会为我敞开<br>不再有逆耳忠言存在<br>但这却是我统治的时代</p>
</blockquote>
<p>当我看到这些歌词的时候，瞬间感觉以前的中文翻译都弱爆了。这才中文翻译！！</p>
<h3 id="我的感受">我的感受</h3>
<hr>
<p>而我原来是看到这个视频才知道有这首歌的，也因为我对《魔兽争霸3》剧情的了解。</p>
<p>初次听到<code>I hear Jerusalem bells a ringing</code>的时候都会想到钟声响起，洛丹伦王子<strong>阿尔萨斯</strong>凯旋。洛丹伦国王泰瑞没有想到自己认为最优秀的儿子阿尔萨斯已堕入黑暗，更没有到洛丹伦国王泰瑞纳斯却更有想到迎接而归是死亡。而且是被阿尔萨斯杀死。昔日对阿尔萨斯说的“总有一个我的生命会抵达终点，而你将加冕为王”，俱往矣！而繁极一时的洛丹伦大陆，亦被阿尔萨斯通灵的亡灵大军毁灭</p>
<p>听到</p>
<blockquote>
<p>I used to rule the world  大千世界曾由我主宰<br>Seas would rise when I gave the word  巨浪也曾因我之命澎湃<br>Now in the morning I sleep alone  而今我却在黎明独自入眠<br>Sweep the streets I used to own  在曾属于我的大道落寞徘徊</p>
</blockquote>
<p>阿尔萨斯击败伊利丹，抢占了冰封王座，成为了新的巫妖王。体内还住着个叫米斯希尔萨·阿奈尔的萌正太<br><img src="http://7u2lzh.com1.z0.glb.clouddn.com/阿尔萨斯.jpg" alt=""></p>
<p>听到</p>
<blockquote>
<p>For some reason I can’t explain 只因一些缘由我无法释怀<br>I know Saint Peter won’t call my name 我亦知天堂之门不会为我敞开</p>
</blockquote>
<p>就会想到被囚禁一万年是因为给精灵带来了井水，堕入恶魔之道是为了保护自己的种族和爱人免受恶魔的欺凌，但背负“背叛者”称号的<strong>伊利丹</strong><br><img src="http://7u2lzh.com1.z0.glb.clouddn.com/205525fc92f6de0d49db79664b04e683_b.jpg" alt=""></p>
<p>当魔兽世界的玩家耗尽力气击败伊利丹，获取不是逆天的豪华装备，只是泰兰德给他的一朵小花</p>
<p><strong>当持续听了很多遍后，就会不由自主地想到</strong></p>
<p>秦始皇号令天下时的霸气，转眼秦王朝飘散如烟。。。</p>
<p>昔日西楚霸王“力拔山兮气盖世“，他日“时不利兮骓不逝”自刎乌江。。。</p>
<p>崇祯吊死在煤山上的，当时李自成号称的“杀一人如杀我父，淫一女如淫母”的军队在北京奸淫掳掠。。。</p>
<h3 id="歌曲剖析">歌曲剖析</h3>
<hr>
<p><img src="http://7u2lzh.com1.z0.glb.clouddn.com/Viva la Vida.jpg" alt=""><br>歌名叫《Viva va Vida》，是西班牙语，意思为生命至上！而在西班牙人眼中，还有更深层次的含义，便是自由，有自由的生命，才称得上是有灵魂的生命。</p>
<p>而歌词以路易十六的口吻，讲述自己从登基为王到送上断头台上时的心理变化过程。</p>
<p><strong>路易十六是谁呢？</strong></p>
<p>路易十六是法国最后一位皇帝，在法国大革命后，人民迫切要求处死路易十六。最后在巴黎革命广场被推上断头台。</p>
<p>当国王路易十六被押上断头台，他满脸疲惫，手臂被反绑在背后，步子沉重而缓慢，在人民的唾弃和咒骂中突然大喊道“我清白死去！我原谅我的敌人，但愿我的血能平息上帝的怒火！”</p>
<p>然而刀起刀落，没有人为国王掉一滴眼泪，只有无尽的，一波胜过一波的欢呼声。</p>
<p>而事实上路易十六并不残暴也不邪恶。相反，与大多数人一样，有着和善友好的基本品质。既敬畏上帝也爱护人民。但无心打理朝政，路易十六无心朝政，而爱好制锁。他的成就有点类似中国的明熹宗朱由校(擅长木工）。甚至连结束他生命的断头台也经过他的改良。</p>
<p>而平民只看到的路易十六的尊贵，但何又想过他是否想做皇帝。但身在帝王之家，身不由己。人民为了自由而亡我，但路易十六难道就是自由吗？难道他就像做皇帝。无论疆土再大，却始终只能居住皇宫，无论权力再大也抵不过命运的作弄。这才是真正的不自由！</p>
<p>反观我等大众，又有几人可以真正掌控自己的命运呢，所以viva la vida又更多表达了人对自由的追求，对命运的抗争。也印证了那一句话，人活着应该是有梦想的，但假如梦想实现了呢？也许正是如此，才会有自由这一看似简单却又难以企及的事物横亘在我们面前，让我们对生命的追求与梦想的渴望永不止步。 </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我最初是看一下这个视频,认识这首歌的。这个视频的名字叫<a href="http://v.youku.com/v_show/id_XNzUxNTczNDY4/v.swf.html" target="_blank" rel="external">献给暴雪——醒来吧！沉睡的王！]]>
    </summary>
    
      <category term="赏乐" scheme="http://cstzhanggj.github.io/categories/%E8%B5%8F%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[javascript 日期处理兼容ie]]></title>
    <link href="http://cstzhanggj.github.io/2015/01/14/javascript%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86%E5%85%BC%E5%AE%B9ie/"/>
    <id>http://cstzhanggj.github.io/2015/01/14/javascript日期处理兼容ie/</id>
    <published>2015-01-13T17:05:52.000Z</published>
    <updated>2015-01-14T17:41:55.000Z</updated>
    <content type="html"><![CDATA[<p>今天，完成了分配的基本功能之后看看浏览器的兼容性问题，发现在360浏览器的兼容模式下，日期都变成<code>NaN-NaN—NaN</code>了。我们都知道360的兼容模式用的是ie内核，而极速模式用的Webkit内核。不兼容360浏览器的兼容模式，实际上是不兼容ie。</p>
<p>而出现<code>NaN-NaN—NaN</code>主要原因是用了<code>var date = new Date(dateVaule)</code>将字符串转为日期的对象。但是这个函数在ie中是不支持的, ie支持的是<code>var date = new Date(year,month,day)</code>。而且因为ie的原因原来的对日期的加减的函数也有相应的变动。以下就是我写的兼容ie之后的时间函数</p>
<h2 id="获得当前时间">获得当前时间</h2>
<hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDateNow</span><span class="params">()</span> </span>{</div><div class="line">    <span class="keyword">var</span> nowDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">    nowDate.setDate(nowDate.getDate());</div><div class="line">    <span class="keyword">return</span> nowDate.Format(<span class="string">"yyyy-MM-dd"</span>);</div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="格式化时间对象">格式化时间对象</h2>
<hr>
<h3 id="格式化月份">格式化月份</h3>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatMonth</span><span class="params">(month)</span></span>{</div><div class="line">  <span class="keyword">var</span> newMonth = month+ <span class="number">1</span> ;</div><div class="line">  <span class="keyword">if</span> (newMonth&lt;<span class="number">10</span>)</div><div class="line">    <span class="keyword">return</span> <span class="string">"0"</span>+newMonth;</div><div class="line">  <span class="keyword">return</span> newMonth;</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="格式化日期">格式化日期</h3>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatDay</span><span class="params">(day)</span></span>{</div><div class="line">   <span class="keyword">if</span> (day&lt;<span class="number">10</span>)</div><div class="line">     <span class="keyword">return</span> <span class="string">"0"</span>+day;</div><div class="line">   <span class="keyword">return</span> day;</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="将时间对象转为yyyy-mm-dd格式">将时间对象转为<code>yyyy-mm-dd</code>格式</h3>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatDate</span><span class="params">(dateValue)</span></span>{</div><div class="line">    <span class="keyword">var</span> Newdate = <span class="keyword">new</span> <span class="built_in">Date</span>(dateValue);</div><div class="line">    <span class="keyword">return</span> (Newdate.getFullYear()) + <span class="string">"-"</span> + JsMonth(Newdate.getMonth()) + <span class="string">"-"</span> + JsDay(Newdate.getDate());</div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="格式化时间字符串">格式化时间字符串</h2>
<hr>
<ul>
<li>这里要注意的是格式月份那里，要记得减1，原因是date对象中日期是从0开始算的。也就是对date对象来说0才是一月份，11才是十二月。假如月份不减1，如:”2015-10-15”就会变成”2015-11-15”</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">DateStringToDate</span><span class="params">(dateValueString)</span></span>{<span class="comment">//格式化时间字符串</span></div><div class="line">  <span class="keyword">var</span> yearIndex = dateValueString.indexOf(<span class="string">'-'</span>);</div><div class="line">  <span class="keyword">var</span> year = dateValueString.substring(<span class="number">0</span>, yearIndex);</div><div class="line">  <span class="keyword">var</span> monthIndex = dateValueString.indexOf(<span class="string">'-'</span>,yearIndex+<span class="number">1</span>);</div><div class="line">  <span class="keyword">var</span> month = dateValueString.substring(yearIndex+<span class="number">1</span>,monthIndex)-<span class="number">1</span>;</div><div class="line">  <span class="keyword">var</span> isSpace = dateValueString.indexOf(<span class="string">' '</span>); <span class="comment">//最后是否有空白</span></div><div class="line">  <span class="keyword">if</span> (isSpace !=-<span class="number">1</span>){</div><div class="line">    <span class="keyword">var</span> day =  dateValueString.substring(monthIndex+<span class="number">1</span>,isSpace);</div><div class="line">  }<span class="keyword">else</span>{</div><div class="line">    <span class="keyword">var</span> day = dateValueString.substring(monthIndex+<span class="number">1</span>,dateValueString.length);</div><div class="line">  }</div><div class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>(year,month,day);</div><div class="line">}</div></pre></td></tr></table></figure>



<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatDateString</span><span class="params">(dateValue)</span></span>{</div><div class="line">  <span class="keyword">return</span> formatDate(dateValue)</div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="时间加减">时间加减</h2>
<hr>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">AddDate</span><span class="params">(dayValue,dayNum)</span></span>{</div><div class="line">  <span class="keyword">var</span> date =  DateStringToDate(dayValue);</div><div class="line">  <span class="keyword">var</span> Newdate = <span class="keyword">new</span> <span class="built_in">Date</span>(date.getTime() + dayNum * <span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>);</div><div class="line">  <span class="keyword">return</span> formatDate(Newdate);</div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="时间差">时间差</h2>
<hr>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDateDiff</span><span class="params">(startTime,endTime)</span></span>{</div><div class="line">  <span class="keyword">return</span> (DateStringToDate(endTime)-DateStringToDate(startTime))/(<span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>);</div><div class="line"></div><div class="line">}</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[解决ie日期的兼容问题。而出现`NaN-NaN—NaN`主要原因是用了`var date = new Date(dateVaule)`将字符串转为日期的对象。但是这个函数在ie中是不支持的, ie支持的是`var date = new Date(year,month,day)`。而且因为ie的原因原来的对日期的加减的函数也有相应的变动。]]>
    
    </summary>
    
      <category term="前端技术" scheme="http://cstzhanggj.github.io/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[程序员与屌丝]]></title>
    <link href="http://cstzhanggj.github.io/2015/01/02/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8E%E5%B1%8C%E4%B8%9D/"/>
    <id>http://cstzhanggj.github.io/2015/01/02/程序员与屌丝/</id>
    <published>2015-01-02T10:03:47.000Z</published>
    <updated>2015-01-14T17:45:02.000Z</updated>
    <content type="html"><![CDATA[<p>一旦说起程序员，很多人就会将程序员和屌丝联想在一起。甚至有一次看新闻介绍在高考填写志愿的时候黑我大计机！当时我还对我妈解释了很长时间了。。。其实真正的程序员与你们普遍认为的程序员是有很大不同的，<strong>被程序员故意制造的假象欺骗了</strong>。就如真正的黑客的形象，与普遍大众的想法也是不同的，有兴趣额的人可以看看我转的文章<a href="http://cstzhanggj.github.io/2014/12/13/whatIsTheHack/" target="_blank" rel="external">什么是黑客</a></p>
<hr>
<h3 id="普通人认为程序员是这样的">普通人认为程序员是这样的</h3>
<hr>
<h4 id="工作的时候是这样的">工作的时候是这样的</h4>
<p><img src="../../../../img/屌丝与程序员/屌丝工作.png" alt=""></p>
<h4 id="使用的键盘是这样的">使用的键盘是这样的</h4>
<p><img src="../../../../img/屌丝与程序员/屌丝键盘.jpg" alt=""></p>
<h4 id="团队合作的时候时这样的">团队合作的时候时这样的</h4>
<p><img src="../../../../img/屌丝与程序员/合作开发.jpg" alt=""></p>
<h4 id="看见女生的时候">看见女生的时候</h4>
<p><img src="../../../../img/屌丝与程序员/与女生交流.jpg" alt=""></p>
<h4 id="遇到改需求的问题，老板。。。">遇到改需求的问题，老板。。。</h4>
<p><img src="../../../../img/屌丝与程序员/改需求.jpg" alt=""></p>
<h4 id="求职的时候">求职的时候</h4>
<p><img src="../../../../img/屌丝与程序员/屌丝求职1.jpg" alt=""></p>
<h4 id="再来一发求职">再来一发求职</h4>
<p><img src="../../../../img/屌丝与程序员/屌丝求职2.jpg" alt=""></p>
<h4 id="见家长后">见家长后</h4>
<p><img src="../../../../img/屌丝与程序员/岳母娘.jpg" alt=""></p>
<h4 id="带儿子的时候">带儿子的时候</h4>
<p><img src="../../../../img/屌丝与程序员/屌丝程序员带儿子.jpg" alt=""></p>
<h4 id="还有专门黑我大程序员的歌曲">还有专门黑我大程序员的歌曲</h4>
<h2><embed src="http://music.163.com/style/swf/widget.swf?sid=1596196&type=2&auto=0&width=320&height=66" width="340" height="86" allownetworking="all"></h2>
<h4 id="还有视频">还有视频</h4>
<embed src="http://player.youku.com/player.php/sid/XMjY2MDQ4ODQ4/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">


<h3 id="但真正的程序员真的是这样的吗？"><strong>但真正的程序员真的是这样的吗？</strong></h3>
<hr>
<h4 id="还真的不是"><strong>还真的不是</strong></h4>
<h4 id="真正的程序员是这样的！">真正的程序员是这样的！</h4>
<h5 id="为了提高工作效率而普遍使用多个显示器，所以工作的环境时这样的。">为了提高工作效率而普遍使用多个显示器，所以工作的环境时这样的。</h5>
<p><img src="../../../../img/屌丝与程序员/上班的环境2.jpg" alt=""></p>
<p>或者时这样<br><img src="../../../../img/屌丝与程序员/上班的环境3.jpg" alt=""></p>
<p>又或者是<br><img src="../../../../img/屌丝与程序员/上班的环境4.jpg" alt=""></p>
<p>家里的环境<br><img src="../../../../img/屌丝与程序员/家里的环境.jpg" alt=""></p>
<h4 id="因为爱护自己的脊柱，所以用的凳子是这样的">因为爱护自己的脊柱，所以用的凳子是这样的</h4>
<p><img src="../../../../img/屌丝与程序员/椅子4.jpg" alt=""></p>
<p>又或者是<br><img src="../../../../img/屌丝与程序员/椅子5.jpg" alt=""></p>
<p><strong>因为爱护自己的双手</strong>，所以用的键盘是这样的<br><img src="../../../../img/屌丝与程序员/键盘1.jpg" alt=""><br><img src="../../../../img/屌丝与程序员/键盘3.jpg" alt=""></p>
<p>或者是，因为喜爱神之编辑器emacs而又不想弄伤宝贵的双手而选择这样的键盘</p>
<p><img src="../../../../img/屌丝与程序员/HHKB Pro2.jpg" alt=""><br><img src="../../../../img/屌丝与程序员/HHKB Pro21.jpg" alt=""></p>
<h4 id="因为爱惜自己的身体，所以会定期健身，公司甚至有为程序员提供健身的设施或者是健身的补贴">因为爱惜自己的身体，所以会定期健身，公司甚至有为程序员提供健身的设施或者是健身的补贴</h4>
<p><img src="../../../../img/屌丝与程序员/健身.jpg" alt=""></p>
<h4 id="在空闲的时候，会做些有趣的事">在空闲的时候，会做些有趣的事</h4>
<p>就如：国外有一位程序员 Kurt Grandis， 家里后院常常遭受松鼠小偷，于是乎他使用Python创造了一套智能武装系统：Kinect定位 -&gt; OpenCV识别松鼠 -&gt; Arduino控制水枪攻击。</p>
<p><img src="../../../../img/屌丝与程序员/松鼠/1.jpg" alt=""><br><img src="../../../../img/屌丝与程序员/松鼠/2.jpg" alt=""><br><img src="../../../../img/屌丝与程序员/松鼠/3.jpg" alt=""><br><img src="../../../../img/屌丝与程序员/松鼠/4.jpg" alt=""><br><img src="../../../../img/屌丝与程序员/松鼠/5.jpg" alt=""></p>
<p>具体情况<a href="http://www.slideshare.net/kgrandis/pycon-2012-militarizing-your-backyard-computer-vision-and-the-squirrel-hordes" target="_blank" rel="external">如下</a>，不过需要翻墙</p>
<h4 id="有自己的除去写代码外的兴趣爱好">有自己的除去写代码外的兴趣爱好</h4>
<p>攀爬 具体：云风的<a href="http://blog.codingnow.com/ooc/eno/" target="_blank" rel="external">攀爬</a><br><img src="../../../../img/屌丝与程序员/攀爬.jpg" alt=""></p>
<p>乐器<br>如：<a href="http://blog.zhaojie.me/2011/02/piano-life-and-interests-driven-practice.html" target="_blank" rel="external">老赵的弹钢琴</a><br><img src="../../../../img/屌丝与程序员/吹笛子.jpg" alt=""><br>如：《unix编程艺术》的作者 EricS.Raymond 会吹笛子</p>
<p>开飞机<br>一些有钱就任性的程序员甚至会开飞机，如：<a href="https://zh.wikipedia.org/wiki/%E6%96%AF%E8%92%82%E5%A4%AB%C2%B7%E6%B2%83%E5%85%B9%E5%B0%BC%E4%BA%9A%E5%85%8B" target="_blank" rel="external">Stephen Gary Wozniak</a>,但可能会失事（笑</p>
<blockquote>
<p>1981年2月，半年前刚拿到飞机驾照的沃兹载着坎蒂，打算飞往圣地牙哥找坎蒂的舅舅帮他们设计婚戒，却在途中发生意外，他说他可能是在“没有适当风速下试图起飞”，结果飞机熄火，机翼失去爬升的力道，因此摔机了[8]。沃兹送到医院幸无大碍，清醒后呈现失忆状态，直到五个星期后才逐渐恢复记忆。</p>
</blockquote>
<h4 id="对待知识方面">对待知识方面</h4>
<p>程序员是少数不需要靠背景，靠人脉，不需要喝酒应酬，不需要跑业务，不需要论资排辈熬资历、努力点就能过上中产阶级生活的职业了。程序员的收入殷实且稳定，在这条路上，基本上就是技术越牛，收入越高，但是在别的行业就未必如此。<br>基本上20多岁的小伙埋头苦干肯干，他的技术这辈子会不断提升，收入自然也就如此，跟别的行业的人还不一样，行业特殊性保证了他们永远在进取学习磨练技术。</p>
<p>所以程序员肯定是这么多职业中最尊重知识(包括心理学、哲学等知识)的专业之一。对待心理学方面可以看看<a href="http://mindhacks.cn/" target="_blank" rel="external">刘未鹏的博客</a>，他甚至出了一本关于心理学的书叫《暗时间》，书里的内容基本上就是他博客上的内容，这本书写得确实十分的好！十分值得一看。而对待哲学方面，优秀的程序员甚至可能会对哲学会有研究，原因只是就是很多自己很难想明白的事在哲学中会得到答案。</p>
<p>因为对知识的尊重，所以程序员常逛的地方学习氛围不会差，甚至逼格有点高，如<a href="www.douban.com">豆瓣</a>，<a href="www.zhihu.com">知乎</a>，<a href="http://www.quora.com/" target="_blank" rel="external">quora</a>。甚至这类的网站本来就是IT中的老大哥创业而诞生的。</p>
<p>因为对知识的尊重，所以程序员对儿女的学习十分关注，刘未鹏甚至会更跟幼儿园的校长谈及教学理念！</p>
<p>我暂时还没听说有比程序员学习能力更快更博学的群体。</p>
<p>但更重要的是，他们更愿意分享知识和经验。计算机能发展如此迅猛，这些人与这样乐于贡献自己知识的人是离不开的。</p>
<h3 id="而程序员本应该有优越感！">而程序员本应该有优越感！</h3>
<hr>
<p>为什么程序员会优越感？<br>知乎上有类似的问题 <a href="http://www.zhihu.com/question/24762626" target="_blank" rel="external">程序员的优越感从何而来？</a></p>
<p>而我觉得Droking的回答十分赞，也很感谢他为我们解答问题。所以就转一下，回答如下</p>
<blockquote>
<p>举几个类似的例子，就能明白了：<br>“我要开一家世界级的银行，现在就差钱了。”<br>“我要当选总统，现在就差全国人民给我投票了。”<br>“我要打造一支称霸全球的军队，现在就差车船炮舰了。”</p>
<p>这样的例子有很多，<strong>其荒谬之处一看便知：把事情成功的关键要素当成了最次要的要素。</strong><br>但是，为什么在“我有一个好的Idea，也有人愿意投资，就差一个写代码的了”之中，荒谬却不那么容易看出来呢？因为IT领域是一个对于很多人来说全新的领域，<strong>大部分从传统行业转战IT和互联网的人对这个行业的关键要素——写代码的人——存在习惯性误判。</strong> **</p>
<p>因为在传统行业当中，成功的核心要素往往不是员工。员工不是稀缺资源，在当前的传统行业就业恶劣大环境下，招员工是非常容易的事情，而且员工的替代性很强。<strong>传统行业中，成功的关键要素是资金（开银行的钱），政策门槛（总统的选票），生产资料（军队的武器装备）等。</strong>所以从传统行业过来的成功人士，都以为IT和互联网行业的成功要素仍然是这些。</p>
<p>但是，<strong>事实恰好相反！</strong><br><strong> </strong>在IT和互联网行业，最不缺的就是资金。<strong>先不去看BAT每年在各种项目上疯狂的砸钱，光是我们学校随便几个本科生搞个莫名其妙的项目，口才稍微好一点，就能忽悠几个投资人砸个几十上百万。
</strong>在IT和互联网行业，最不怕的就是政策。<strong>这个行业本来就没有什么成形的政策法规，对于互联网中层出不穷的新商业模式，政策根本就来不及制订。互联网行业往往是政策的颠覆者，所以在创业项目发展到非常大的规模之前，根本不会有政策来管制（参考滴滴打车、余额宝、电视盒子等案例）。
</strong>在IT和互联网行业，最不愁的就是生产资料。**不就几台服务器么。。。。</p>
<p>但是，这个行业中，<strong>成功的关键要素就是技术和设计。</strong>而技术和设计不是花钱换来的，而是程序员和设计师——也就是所谓的“写代码的”和“做美工的”——积累出来的。<strong>本来互联网行业就是一个知识密集型行业，人大脑中的知识才是关键要素。这就决定了作为关键要素的“写代码的人”会有优越感。</strong> **</p>
</blockquote>
<p>这只是应证了最经典的经济原理罢了。</p>
<blockquote>
<p>有评论指出，“写代码的人非常多，不会构成稀缺资源”。针对这个问题在补充一下：<br>A：“我要开一家世界级的银行，现在就差钱了。” B：“好，我投资10块钱。”<br>A：“我要当选总统，现在就差全国人民给我投票了。” B：“好，我全家加姥姥、姥爷、舅舅、姑姑、婶婶…….投你10张票。”<br>A：“我要打造一支称霸全球的军队，现在就差武器了。” B：“好，我家里有把BB弹手枪，儿子不要了的。”<br>最后当然是：<br>A：“我有一个非常牛逼的Idea，现在就差一个写代码的了。” B：“好，我这就去蓝翔帮你招一个。”<br><strong>所以我的回答是：你当然可以轻轻松松招到一个没有优越感的程序员，但这样的程序员你敢要么？</strong><br>拥有关键知识的程序员，都是有优越感的，因为这是别人不具备的。从蓝翔招100个写代码的人，比不上一个有优越感的人。</p>
</blockquote>
<h3 id="而为什么这么多人黑程序员">而为什么这么多人黑程序员</h3>
<hr>
<p>你以为谁有这么多空黑程序员，全都是自黑有木有！闲着没事做，黑一下自己，自娱自乐而且。外行的能黑程序员吗？哈哈。而且程序员这样做可能是因为这样</p>
<blockquote>
<p>这是程序猿的阴谋，他们通过自黑，让无知的父母们以为他们干的是和隔壁修电脑小王的一样的工作，从而阻止他们的孩子选择软件专业。<br>同时，忽悠他们选择经管，金融这类以培养信用卡销售员为目标的专业。<br>完成了这些后，程序猿就可以安心地数钱了！</p>
</blockquote>
<p>转几条知乎,问题在此<a href="http://www.zhihu.com/question/21466500" target="_blank" rel="external">网上黑程序员的现实依据是什么？程序员真的那么悲惨吗？</a></p>
<blockquote>
<p>程序员热衷于自嘲；程序员一般喜爱code（类似理科学生大多喜欢数学一样），生活中大部分时间用在程序上（包括日常工作加班，学习新知识，了解前沿最近动向等），对外接触的时间比较少；大部分的时间混迹于各大网站，穿梭于各种讯息当中，所以也热衷于在网上进行调侃自嘲，为平淡的日子增加一点乐趣；<br>估计其他行业的人平均花在网上的时间不会比程序员高吧。<br>而且程序员在行业知识上有一定的门槛（IT领域各种语言、框架、算法、应用领域等涉及面相当宽广），门外汉想调侃但完全不懂行业知识几乎是话不投机的，压根也无法真正的黑到程序员。<br>程序员的生活虽然单调，业余时间不会很多也不愿花在各种活动上，但能选择IT作为自身行业的，基本上也都是喜欢IT的，有点乐不亦乎的感觉（加班加到吐的另算吧）</p>
</blockquote>
<p>或者是</p>
<blockquote>
<p>我在T公司。我身边的程序员，都是看起来一副屌丝样，其实收入稳定生活丰富，iPhone,iPad一大堆，每年至少国内旅游两三次，出国旅游一次。聚餐常在很不错的餐厅，工作四五年的基本买房，或者租非常享受很不错的房子。开宝马的不要太多，也有爱骑自行车的，不过都是乐意。而且每次单身派对，都是女多男少。</p>
<p>你能接受一个屌丝样的家伙过的这么爽么？不能。</p>
<p>所以他们爱自黑。省得大家不平衡。</p>
</blockquote>
<p>大概到了毕业的时候其他专业的人看到程序员每个月9k，10k，甚至13k，15k的薪水，心中有点郁闷。<br>到工作了2年后，看到程序员每月拿到20k，优秀的拿到50k的薪水，心中有点妒忌。<br>到了工作几年后，看到十分优秀的程序员拿到了百万年薪的时候(参见知乎“温兆伦”，这三个人确实十分牛。公司只用百万年薪雇佣他们实在太赚了。用轮子哥的话就是我一个人做十个人的活，但只给五个人工资)，心中有点后悔，后悔错听网络上的舆论。或许在想说好的屌丝程序员，为啥跟我在网络上看到的不一样的！</p>
<p><img src="../../../../img/屌丝与程序员/呵呵.png" alt=""></p>
<p>以上只是开个玩笑，其实程序员的门槛不低的。</p>
<h3 id="程序员的门槛低吗？">程序员的门槛低吗？</h3>
<hr>
<p>其实程序员的门槛也可以说很低。因为这个这个行业对学历的要求不是很高。<strong>注重实力而不是学历。</strong>如果你说我在中国xx大学取得了xx学位，还真不知道你有多厉害。但是你说我参与了xx项目，代码贡献度在n%以上，解决什么很难攻克的具体的问题，这样才能了解到你的厉害之处。</p>
<p>但实际上程序员的门槛高，十分高，成为一个top1%的程序员的门槛甚至从你出生开始就已经决定了。<br><!--
计算机的门槛从本科学习中就已经开始了。
一个从没有参与过中小型项目代码的人，要他了解《软件工程》，没有可能！
一个从没有项目失败或者重构等经历，要他理解《设计模式》，没有可能！
所以计算机的学生充斥着计算机专业大学学习无用论，浑浑噩噩度过大学四年是很正常的事。
出来工作可能不从事或者从事计算机的最低层、最累、最容易被人代替的工作，然后高呼计算机专业害人不浅。
这是第二道门槛。
这道门槛十分难跨越，可能这真的是计算机教育的问题。中国计算机教育是参照外国的课程，而外国的大学的教材很大程序是给外国高中那些不安分守己的学生而设的，开设课程的原因很大程度上是给已经是有编程经验的学生系统学习。**你以为要实现，高內聚，低耦合，你以为就是考试填空题那么简单吗？。**况且就算教育的没有编程经验的学生，外国使用的教材跟中国的大不相同。就如，mit大学给学生上的第一门课是**《计算机程序的构造与分析》* ***，这本书业界叫巫师书。该大学的学生学的第一门语言不是c，而scheme。而之后课程需要用到的c，需要自己在课余学会 。而这本书的难度比国内的教材难得多，用学会这本书的思想的人来说学了这本书之后会飞。连工作四、五年的程序员再看这本书都会觉得收获良多。但你又知不知道外国有多少对计算机充满兴趣的学生因为几门计算机必修课程过不了而放弃计算机专业。但是大部分的老师能教这本书吗？就算能教，能有让学生挂科的勇气吗？
--></p>
<p>而我觉得跨越程序员的门槛关键是智商和努力。</p>
<p>关于这点不想说太多，说太多会戳到很多计算机专业学生的痛处。而对这个问题感兴趣的同学可以看<a href="http://www.zhihu.com/question/26679707" target="_blank" rel="external">这里</a></p>
<h3 id="程序员与屌丝相似之处">程序员与屌丝相似之处</h3>
<hr>
<p>虽然我觉得普遍群众眼中的程序员和屌丝有很大区别。但是程序员和屌丝还是有交集的。顺便自黑一下，哈哈（逃</p>
<h4 id="1-_很多程序员的家庭背景没有那么耀眼">1. 很多程序员的家庭背景没有那么耀眼</h4>
<p>程序员是一个几乎不靠家庭背景的职业。有实力就是有实力，代码是不会出卖你的。所以程序员的父母是工人，农民之类的职业是正常现象。</p>
<h4 id="2-_程序员的衣着没有那么有个性">2. 程序员的衣着没有那么有个性</h4>
<p>程序员的衣着是这样的<br><img src="../../../../img/屌丝与程序员/屌丝程序员的形象.jpg" alt=""></p>
<p>或者是”冲锋衣+牛仔裤+运动鞋”这种奇怪的组合</p>
<p><img src="../../../../img/屌丝与程序员/冲锋衣.jpg" alt=""></p>
<p>喜欢穿的鞋子是。。。<br><img src="../../../../img/屌丝与程序员/拖鞋.png" alt=""></p>
<p>程序媛的衣着是这样的<br><img src="../../../../img/屌丝与程序员/程序媛.jpg" alt=""></p>
<p>其实都是自黑一下而且，衣着还是要看人的品味<br>如：<br><img src="../../../../img/屌丝与程序员/乔布斯.jpg" alt=""></p>
<p><strong>然后就没有了。</strong> **</p>
<h4 id="3-最悲催的">3.最悲催的</h4>
<p><strong>没有女朋友！</strong><br>其实这才是我写这篇文章的主要目的。程序员才是最理想的丈夫有木有！</p>
<p>程序员有三好：钱多，话小，死得找。</p>
<p>而且不怕他花心有外遇，有时间除了陪家人就是对着电脑。</p>
<p>程序员有多好！看看真实的情况。本文转自<a href="http://bbs.csdn.net/topics/320221495" target="_blank" rel="external">这里</a></p>
<blockquote>
<p>  一、找程序员不用担心外遇。程序员是对着电脑工作，周围同事大部分是男生。他的生活中基本接触不到mm，所以不会有办公室恋情的发生，也就不会有外遇问题发生。而且面对的诱惑少，不像销售啊等职位，需要和外人打交道，而且应酬多，所面对的诱惑多，外遇出轨问题容易发生。剪剪常常加班到半夜，我是非常放心的，唯一担心的就是他的身体是否吃得消。<br>    二、程序员很老实。在单位，老板让加班就加班。在家里，老婆说啥都听。mm们，有个老实的老公是不是很不错啊。他可能没你想象的那么浪漫，给你惊喜，但他会老老实实记住你说的每句话，按照你的要求去做。<br>    三、程序员很有耐心。这个理由我不多说了，没有耐心的话，怎么写代码。这个在mm当了妈妈会发现是个很好的优点的。我是个没有耐心的人，教小剪学东西他要是学不会，我会没有耐心发脾气的，但是剪剪很有耐心的，会陪他玩，慢慢教会小剪。<br>    四、程序员很细心。写代码是个细活，不细心就会有bug，真写了bug，还得耐心细心的去找出来。在生活中，对于粗枝大叶的mm来说，有个细心的gg照顾不是很好嘛？反正我们家我是粗枝大叶型，剪剪是细心型。<br>    五、程序员很热心。论坛上兄弟们有困难，他们会出手相助。生活中，朋友有电脑问题，他们会帮助解决。我周围的同事好友要是电脑出问题了，都是剪剪帮忙处理的。<br>    六、程序员是IT高手。可能这么说有点夸张，但是身边有个程序员老公，电脑上很多事不用担心的。早到我以前公开教学要做课件，是剪剪帮我做的。到现在家里要弄弄路由器，或者电脑中病毒了重装系统。再到开心网兰蔻粉领丽人评选，剪剪给了技术上的支持。顺带着，“近剪者赤”，看得多了，我也要变成单位里电脑高手了。很多简单问题也能处理了。<br>    七、程序员单纯。不知道是不是所有程序员是这样，反正我家剪是这样，他对别人不会动什么坏心。对外人没坏心，对你也不会有坏心的。曾经碰到个朋友，老公外遇，要离婚，动了很多坏心，在离婚前还把财产都转移了。朋友离婚，钱没有，房子没有，为了这个男人却付出了青春。<br>    八、程序员加班多。可能这是个缺点，但有时也觉得是个优点。他加班多，你可以有个人空间，做做自己喜欢做的事。我同事觉得我比他们自由多了。这得归功于剪剪加班多。他加班多，你可以拿着他卡去shopping。他没时间花钱，你帮他花。而且大部分的程序员都是很大方的，不会说自己太太什么的。<br>    九、程序员可爱。不知道这个是不是和工作性质有关，我认识的程序员们都很老实的，基本没有滑头的。剪剪最老实的事就是，每次工资还没加，就是听到内部风声，就会先告诉我。每次有机会发了现金，其实不告诉我我是不知道的，他也会老交给我。最最可爱老实的一次，是今年公司年会，他中了4000的现金大奖。马上打电话给我。其实他告诉我是两千，我也不知道的。而且晚上回家后，还非要把我摇醒，让我数钱，说是“数钱数到自然醒”。估计那晚是喝多了。<br>    十、程序员有责任心。没有责任心的程序员，写出来的代码都是问题。当然就是因为有了责任心，想给家人过好幸福的日子。才会拼命加班，努力赚钱。我家剪剪如此，我相信所有的程序员们都是这样的。</p>
</blockquote>
<p>遇到一个程序员就嫁给他吧。例如：<strong>我</strong>（逃）</p>
<p>但估计看到这里应该没有什么妹子吧<br><img src="../../../../img/屌丝与程序员/把我的悲伤留给自己.png" alt=""></p>
<h3 id="最后">最后</h3>
<hr>
<p>摘抄十分有意思的短文，以勉励自己的前进</p>
<blockquote>
<p>Hello world!<br>你是否常常调侃为何会选择这么一个苦命的行当，自嘲在生活的磨难中早已丧失曾经的理想。</p>
<p>每当此时，便想起“入行”第一天“师傅”教的第一堂课：用程序对这个世界说hello —— 全世界的SE都是如此。</p>
<p>看着严肃不苟的老教授在黑板上写下这个近似于卖萌的词语，大家笑了，它没有什么含义，却又包含着无限的意境。</p>
<p>这是一句拥有魔力的咒语~</p>
<p>在从业后的岁月中，我们经历着种种心劫：困苦、迷茫、膨胀、消极、浮躁、甚至质疑……</p>
<p>然而，无论处于哪种心境当中，在充满阳光的早晨，心中默念，便总能将脱线情绪带回原点，仿佛变回那个站在金色大门前抬头仰望的孩子，稚气的脸上充满了惊奇、兴奋、渴望与真诚……</p>
<p>“Hello，world！”，告诉我们不要忘记最初的梦想，告诉我们改变世界就先学会与世界相处。</p>
<p>它是程序员职业的“希波克拉底誓词”，永远保持新奇、积极与希望。</p>
<p>加油吧，骚年！！<br>该文转自<a href="http://www.zhihu.com/question/22846535" target="_blank" rel="external">程序员的理想是什么？</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[程序员是屌丝？程序员和屌丝有很大的区别。我身边的程序员，都是看起来一副屌丝样，其实收入稳定生活丰富，iPhone,iPad一大堆，每年至少国内旅游两三次，出国旅游一次。聚餐常在很不错的餐厅，工作四五年的基本买房，或者租非常享受很不错的房子。开宝马的不要太多，也有爱骑自行车的，不过都是乐意。而且每次单身派对，都是女多男少。你能接受一个屌丝样的家伙过的这么爽么？不能。所以他们爱自黑。省得大家不平衡。]]>
    
    </summary>
    
      <category term="观点与感想" scheme="http://cstzhanggj.github.io/categories/%E8%A7%82%E7%82%B9%E4%B8%8E%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[javascript判断浏览器类型]]></title>
    <link href="http://cstzhanggj.github.io/2015/01/02/javascript%E5%88%A4%E6%96%AD%E6%B5%8F%E8%A7%88%E5%99%A8%E7%B1%BB%E5%9E%8B/"/>
    <id>http://cstzhanggj.github.io/2015/01/02/javascript判断浏览器类型/</id>
    <published>2015-01-01T16:49:27.000Z</published>
    <updated>2015-01-14T17:43:34.000Z</updated>
    <content type="html"><![CDATA[<p>本文参考自<a href="http://www.cnblogs.com/leadzen/archive/2008/09/06/1285764.html" target="_blank" rel="external">JavaScript判断浏览器类型及版本</a></p>
<p><code>JavaScript</code>是前端开发的主要语言，我们可以通过编写<code>JavaScript</code>程序来判断浏览器的类型及版本。<code>JavaScript</code>判断浏览器类型一般有两种办法，一种是根据各种浏览器独有的属性来分辨，另一种是通过分析浏览器的<code>userAgent</code>属性来判断的。在许多情况下，值判断出浏览器类型之后，还需判断浏览器版本才能处理兼容性问题，而判断浏览器的版本一般只能通过分析浏览器的<code>userAgent</code>才能知道。</p>
<p>我们先来分析一下各种浏览器的特征及其<code>userAgent</code>。</p>
<h2 id="各种浏览器的特征及其userAgent">各种浏览器的特征及其userAgent</h2>
<hr>
<h3 id="IE">IE</h3>
<p>只有<code>IE</code>支持创建<code>ActiveX</code>控件，因此她有一个其他浏览器没有的东西，就是<code>ActiveXObject</code>函数。只要判断window对象存在<code>ActiveXObject</code>函数，就可以明确判断出当前浏览器是<code>IE</code>。而<code>IE</code>各个版本典型的<code>userAgent</code>如下：</p>
<blockquote>
<p>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0)<br>Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.2)<br>Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)<br>Mozilla/4.0 (compatible; MSIE 5.0; Windows NT)</p>
</blockquote>
<p>其中，版本号是MSIE之后的数字。</p>
<h3 id="Firefox">Firefox</h3>
<p><code>Firefox</code>中的DOM元素都有一个<code>getBoxObjectFo</code>r函数，用来获取该DOM元素的位置和大小（IE对应的中是<code>getBoundingClientRect</code>函数）。这是<code>Firefox</code>独有的，判断它即可知道是当前浏览器是<code>Firefox</code>。<code>Firefox</code>几个版本<code>的userAgen</code>t大致如下：</p>
<blockquote>
<p>Mozilla/5.0 (Windows; U; Windows NT 5.2) Gecko/2008070208 Firefox/3.0.1<br>Mozilla/5.0 (Windows; U; Windows NT 5.1) Gecko/20070309 Firefox/2.0.0.3<br>Mozilla/5.0 (Windows; U; Windows NT 5.1) Gecko/20070803 Firefox/1.5.0.12</p>
</blockquote>
<p>其中，版本号是<code>Firefox</code>之后的数字。</p>
<h3 id="Opera">Opera</h3>
<p><code>Opera</code>提供了专门的浏览器标志，就是<code>window.opera</code>属性。<code>Opera</code>典型的<code>userAgent</code>如下：</p>
<blockquote>
<p>Opera/9.27 (Windows NT 5.2; U; zh-cn)<br>Opera/8.0 (Macintosh; PPC Mac OS X; U; en)<br>Mozilla/5.0 (Macintosh; PPC Mac OS X; U; en) Opera 8.0</p>
</blockquote>
<p>其中，版本号是靠近<code>Opera</code>的数字。</p>
<h3 id="Safari">Safari</h3>
<p><code>Safari</code>浏览器中有一个其他浏览器没有的<code>openDatabase</code>函数，可做为判断<code>Safari</code>的标志。<code>Safari</code>典型的<code>userAgent</code>如下：</p>
<blockquote>
<p>Mozilla/5.0 (Windows; U; Windows NT 5.2) AppleWebKit/525.13 (KHTML, like Gecko) Version/3.1 Safari/525.13<br>Mozilla/5.0 (iPhone; U; CPU like Mac OS X) AppleWebKit/420.1 (KHTML, like Gecko) Version/3.0 Mobile/4A93 Safari/419.3</p>
</blockquote>
<p>其版本号是Version之后的数字。</p>
<h3 id="Chrome">Chrome</h3>
<p><code>Chrome</code>有一个<code>MessageEvent</code>函数，但<code>Firefox</code>也有。不过，好在<code>Chrome</code>并没有<code>Firefox</code>的<code>getBoxObjectFor</code>函数，根据这个条件还是可以准确判断出Chrome浏览器的。目前，Chrome的userAgent是：</p>
<p>Mozilla/5.0 (Windows; U; Windows NT 5.2) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.27 Safari/525.13<br>其中，版本号在Chrome只后的数字。</p>
<p>有趣的是，<code>Chrome</code>的<code>userAgent</code>还包含了<code>Safari</code>的特征，也许这就是<code>Chrome</code>可以运行所有<code>Apple</code>浏览器应用的基础吧。</p>
<h2 id="使用javascript通过分析userAgent获取浏览器类型及版本">使用javascript通过分析userAgent获取浏览器类型及版本</h2>
<p>只要了解了以上信息，我们就可以根基这些特征来判断浏览器类型及其版本了。我们会将判断的结果保存在Sys名字空间中，成为前端框架的基本标志信息，供今后的程序来读取。如果判断出谋种浏览器，Sys名字空间将有一个该浏览器名称的属性，其值为该浏览器的版本号。例如，如果判断出<code>IE 7.0</code>，<code>则Sys.ie</code>的值为7.0；如果判断出<code>Firefox 3.0</code>，则<code>Sys.firefox</code>的值为3.0。下面是判断浏览器的代码：</p>
<p>使用不同特征来判断浏览器的方法，虽然在速度上比用正则表达式分析<code>userAgent要来的快，不过这些特征可能会随浏览器版本而变化。比如，一种浏览器本来独有的特性取得了市场上的成功，其他浏览器也就可能跟着加入该特性，从而使该浏览器的独有特征消失，导致我们的判断失败。因此，相对比较保险的做法是通过解析</code>userAgent<code>中的特征来判断浏览器类型。何况，反正判断版本信息也需要解析浏览器的</code>userAgent`的。</p>
<p>通过分析各类浏览器的<code>userAgent</code>信息，不难得出分辨各类浏览器及其版本的正则表达式。而且，对浏览器类型的判断和版本的判断完全可以合为一体地进行。于是，我们可以写出下面的代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</div><div class="line">        <span class="keyword">var</span> Sys = {};</div><div class="line">        <span class="keyword">var</span> ua = navigator.userAgent.toLowerCase();</div><div class="line">        <span class="keyword">var</span> s;</div><div class="line">        (s = ua.match(<span class="regexp">/msie ([\d.]+)/</span>)) ? Sys.ie = s[<span class="number">1</span>] :</div><div class="line">        (s = ua.match(<span class="regexp">/firefox\/([\d.]+)/</span>)) ? Sys.firefox = s[<span class="number">1</span>] :</div><div class="line">        (s = ua.match(<span class="regexp">/chrome\/([\d.]+)/</span>)) ? Sys.chrome = s[<span class="number">1</span>] :</div><div class="line">        (s = ua.match(<span class="regexp">/opera.([\d.]+)/</span>)) ? Sys.opera = s[<span class="number">1</span>] :</div><div class="line">        (s = ua.match(<span class="regexp">/version\/([\d.]+).*safari/</span>)) ? Sys.safari = s[<span class="number">1</span>] : <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="comment">//以下进行测试</span></div><div class="line">        <span class="keyword">if</span> (Sys.ie) <span class="built_in">document</span>.write(<span class="string">'IE: '</span> + Sys.ie);</div><div class="line">        <span class="keyword">if</span> (Sys.firefox) <span class="built_in">document</span>.write(<span class="string">'Firefox: '</span> + Sys.firefox);</div><div class="line">        <span class="keyword">if</span> (Sys.chrome) <span class="built_in">document</span>.write(<span class="string">'Chrome: '</span> + Sys.chrome);</div><div class="line">        <span class="keyword">if</span> (Sys.opera) <span class="built_in">document</span>.write(<span class="string">'Opera: '</span> + Sys.opera);</div><div class="line">        <span class="keyword">if</span> (Sys.safari) <span class="built_in">document</span>.write(<span class="string">'Safari: '</span> + Sys.safari);</div><div class="line">    <span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span></div></pre></td></tr></table></figure>

<p>其中，采用了“… ? … : …”这样的判断表达式来精简代码。判断条件是一条赋值语句，既完成正则表达式的匹配及结果复制，又直接作为条件判断。而随后的版本信息只需从前面的匹配结果中提取即可，这是非常高效的代码。</p>
<p>以上的代码都是为了打造前端框架所做的预研，并在五大浏览器上测试通过。今后，判断某种浏览器只需用if(Sys.ie)或if(Sys.firefox)等形式，而判断浏览器版本只需用<code>if(Sys.ie == &#39;8.0&#39;)</code>或<code>if(Sys.firefox == &#39;3.0&#39;</code>等形式，表达起来还是非常优雅的。</p>
<p>前端框架项目已经启动，一切就看过程和结果了…</p>
]]></content>
    <summary type="html">
    <![CDATA[JavaScript是前端开发的主要语言，我们可以通过编写JavaScript程序来判断浏览器的类型及版本。JavaScpt判断浏览器类型一般有两种办法，一种是根据各种浏览器独有的属性来分辨，另一种是通过分析浏的userAgent属性来判断的。在许多情况下，值判断出浏览器类型之后，还需判断浏览器版本才能处理兼容性问题，而判断浏览器的版本一般只能通过分析浏览器的userAgnt才能知道。]]>
    
    </summary>
    
      <category term="前端技术" scheme="http://cstzhanggj.github.io/categories/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[golang 获取上传文件的大小]]></title>
    <link href="http://cstzhanggj.github.io/2014/12/13/getFileSize/"/>
    <id>http://cstzhanggj.github.io/2014/12/13/getFileSize/</id>
    <published>2014-12-13T03:32:09.000Z</published>
    <updated>2015-01-14T17:36:28.000Z</updated>
    <content type="html"><![CDATA[<p>折腾了golang获取文件近一天了。谷歌搜了一些方法，虽然这些方法能够能获取一些比较小的文件的大小，但获得大的文件大小的竟然会报错，最后解决方法的这样的。</p>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> Sizer <span class="keyword">interface</span> {</div><div class="line">	Size() <span class="typename">int64</span></div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">type</span> stat <span class="keyword">interface</span> {</div><div class="line">	Stat() (os.FileInfo,error)</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">func</span> FormFileSize(src <span class="keyword">interface</span>{}) <span class="typename">int64</span> {</div><div class="line">	<span class="keyword">var</span> fsize <span class="typename">int64</span> =<span class="number"> 0</span></div><div class="line">	<span class="keyword">if</span> statInterface, ok := src.(stat); ok {</div><div class="line">		fileInfo, _ := statStat()</div><div class="line">		fsize = fileInfo.Size()</div><div class="line">	}</div><div class="line">	<span class="keyword">if</span> sizeInterface, ok := src.(Sizer); ok {</div><div class="line">		fsize = sizeInterface.Size()</div><div class="line">	}</div><div class="line">	<span class="keyword">return</span> fsize</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="测试用例">测试用例</h3>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span> TestFormSize(t *testing.T){</div><div class="line">	Convey(<span class="string">"TestFormSize"</span>,t,<span class="keyword">func</span>(){</div><div class="line">		f,_:=os.Open(<span class="string">"测试.rar"</span>)</div><div class="line">		fmt.Println(FormFSzie(f))</div><div class="line">		f.Close()</div><div class="line">	})</div><div class="line">}</div></pre></td></tr></table></figure>

<p>`</p>
]]></content>
    <summary type="html">
    <![CDATA[golang 获取上传文件的大小。折腾了golang获取文件近一天了。谷歌搜了一些方法，虽然这些方法能够能获取一些比较小的文件的大小，但获得大的文件大小的竟然会报错，最后解决方法的这样的。]]>
    
    </summary>
    
      <category term="golang" scheme="http://cstzhanggj.github.io/tags/golang/"/>
    
      <category term="golang" scheme="http://cstzhanggj.github.io/categories/golang/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[什么时候该重构]]></title>
    <link href="http://cstzhanggj.github.io/2014/12/13/whatTimeToRefactoring/"/>
    <id>http://cstzhanggj.github.io/2014/12/13/whatTimeToRefactoring/</id>
    <published>2014-12-12T18:13:34.000Z</published>
    <updated>2014-12-31T16:44:13.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><p>重构本来就不是一件应该特别拔出时间做的事情，重构应该随时随地进行。你不应该为重构而重构，你之所以重构，是因为你想做别的什么事，而重构可以帮助你把那些事做好。</p>
</li>
<li><p>如果最后你没有足够的时间，通常就表示其实你早该重构</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><p>重构本来就不是一件应该特别拔出时间做的事情，重构应该随时随地进行。你不应该为重构而重构，你之所以重构，是因为你想做别的什么事，而重构可以帮助你把那些事做好。</p>
</li>
<li><p>如果最后你没有足够的时间，通常就表示其实你早该重构</p>
</]]>
    </summary>
    
      <category term="观点与感想" scheme="http://cstzhanggj.github.io/categories/%E8%A7%82%E7%82%B9%E4%B8%8E%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[什么是黑客]]></title>
    <link href="http://cstzhanggj.github.io/2014/12/13/whatIsTheHack/"/>
    <id>http://cstzhanggj.github.io/2014/12/13/whatIsTheHack/</id>
    <published>2014-12-12T18:00:20.000Z</published>
    <updated>2015-01-14T17:40:14.000Z</updated>
    <content type="html"><![CDATA[<p>本文摘自《黑客与画家》</p>
<p>　为了把这个问题说清楚，有必要从源头上讲起。1946年，第一台电子计算机ENIAC在美国诞生，从此世界上一些最聪明、最有创造力的人开始进入这个行业，在他们身上逐渐地形成了一种独特的技术文化。在这种文化的发展过程中，涌现了很多“行话”（jargon）。20世纪60年代初，麻省理工学院有一个学生团体叫做“铁路模型技术俱乐部”（Tech Model RailroadClub，简称TMRC），他们把难题的解决方法称为hack。</p>
<p>　　在这里，hack作为名词有两个意思，既可以指很巧妙或很便捷的解决方法，也可以指比较笨拙、不那么优雅的解决方法。两者都能称为hack，不同的是，前者是漂亮的解决方法（cool hack或neat hack），后者是丑陋的解决<br>方法（ugly hack或quick hack）。hack的字典解释是砍（木头），在这些学生看来，解决一个计算机难题就好像砍倒一棵大树。那么相应地，完成这种hack的过程就被称为hacking，而从事hacking的人就是hacker，也就是黑客。</p>
<p>　　从这个意思出发，hack还有一个引申义，指对某个程序或设备进行修改，使其完成原来不可用的功能（或者禁止外部使用者接触到的功能）。在这种意义上，hacking可以与盗窃信息、信用卡欺诈或其他计算机犯罪联系在一起，这也是后来“黑客”被当作计算机入侵者的称呼的原因。</p>
<p>　　但是，在20世纪60年代这个词被发明的时候，“黑客”完全是正面意义上的称呼。TMRC使用这个词是带有敬意的，因为在他们看来，如果要完成一个hack，就必然包含着高度的革新、独树一帜的风格、精湛的技艺。最能干的<br>人会自豪地称自己为黑客。这时，“黑客”这个词不仅是第一流能力的象征，还包含着求解问题过程中产生的精神愉<br>悦或享受。也就是说，从一开始，黑客就是有精神追求的。自由软件基金会创始人理查德·斯托尔曼说：<strong>“出于兴趣而解决某个难题，不管它有没有用，这就是黑客。</strong></p>
<p>　　根据理查德·斯托尔曼的说法，黑客行为必须包含三个特点：<strong>好玩、高智商、探索精神。</strong>只有其行为同时满足这三个标准，才能被称为“黑客”。另一方面，它们也构成了黑客的价值观，黑客追求的就是这三种价值，而不是实用性或金钱。<br>　　<br>　　<br>　　1984年，《新闻周刊》的记者史蒂文·利维出版了历史上第一本介绍黑客的著作——《黑客：计算机革命的英雄》（Hackers: Heroes ofthe Computer Revolution）。在该书中，他进一步将黑客的价值观总结为六条“黑客伦<br>理”（hacker ethic），直到今天这几条伦理都被视为这方面的最佳论述。</p>
<blockquote>
<p>　　<strong>1. 使用计算机以及所有有助于了解这个世界本质的事物都不应受到任何限制。任何事情都应该亲手尝试。<br>　　（Access to computers—and anything thatmight teach you something about the way the world works—should be unlimited and total.Always yield to the Hands-On Imperative!）</strong></p>
<p>　　<strong>2. 信息应该全部免费。<br>　　（All information should be free.）</strong></p>
<p>　　<strong>3. 不信任权威，提倡去中心化。<br>　　（Mistrust Authority—Promote Decentralization.）</strong></p>
<p>　　<strong>4. 判断一名黑客的水平应该看他的技术能力，而不是看他的学历、年龄或地位等其他标准。<br>　　（Hackers should be judged by theirhacking, not bogus criteria such as degrees, age,race, or position.）</strong></p>
<p>　　<strong>5.你可以用计算机创造美和艺术。<br>　　（You can create art and beauty on a computer.）</strong></p>
<p>　　<strong>6.计算机使生活更美好。<br>　　（Computers can change your life for the better.）</strong></p>
</blockquote>
<p>　　根据这六条“黑客伦理”，黑客价值观的核心原则可以概括成这样几点：<strong>分享、开放、民主、计算机的自由使用、进步。</strong></p>
<p>　　所以，“黑客”这个词的原始含义就是指那些信奉“黑客伦理”而且能力高超的程序员。历史上一些最优秀的程序员都是“黑客”。除了上文提到的理查德·斯托尔曼，还包括Unix操作系统创始人丹尼斯·里奇和肯·汤普森，经典巨著《计算机程序设计艺术》的作者、斯坦福大学计算机教授高德纳，Linux操作系统创始人莱纳斯·托沃兹，“开源运动”创始人埃里克·雷蒙德，微软公司创始人比尔·盖茨等。正是黑客把计算机工业推向了更高的高度。<br>　　<br>　　“黑客伦理”的一个必然推论就是，黑客不服从管教，具有叛逆精神。黑客通常对管理者强加的、限制他们行为的愚蠢规定不屑一顾，会找出规避的方法。一部分原因是为了自由使用计算机，另一部分原因是为了展现自己的聪明。比如，计算机设备的各种安全措施就是最常被黑客破解的东西。史蒂文·利维对这一点有过一段生动的描述：</p>
<blockquote>
<p>　　“对于黑客来说，关着的门就是一种挑衅，而锁着的门则是一种侮辱。……黑客相信，只要有助于改进<br>现状、探索未知，人们就应该被允许自由地使用各种工具和信息。当一个黑客需要一样东西来帮助自己创<br>造、探索或者改正某种设备时，他不会自找麻烦，不会接受那些财产专有权的荒谬概念。”</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[“黑客伦理”的一个必然推论就是，黑客不服从管教，具有叛逆精神。黑客通常对管理者强加的、限制他们行为的愚蠢规定不屑一顾，会找出规避的方法。一部分原因是为了自由使用计算机，另一部分原因是为了展现自己的聪明。比如，计算机设备的各种安全措施就是最常被黑客破解的东西。]]>
    
    </summary>
    
      <category term="观点与感想" scheme="http://cstzhanggj.github.io/categories/%E8%A7%82%E7%82%B9%E4%B8%8E%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[编程感悟 --关于学习]]></title>
    <link href="http://cstzhanggj.github.io/2014/12/11/aboutStudy/"/>
    <id>http://cstzhanggj.github.io/2014/12/11/aboutStudy/</id>
    <published>2014-12-11T15:06:07.000Z</published>
    <updated>2015-01-14T17:38:47.000Z</updated>
    <content type="html"><![CDATA[<p>不知不觉已经在创新班一年多了，在一年多的时间确实经历了太多太多东西，考试系统，简单版的跑酷手游，深空争霸手游，报修管理系统，再到珠海学购电商实训。这么多的项目最后或许就是那个bug不断珠海学购电商实训的项目能够上线吧。而之前那些项目不能上线的原因出了。而创新班的人数已经从40+人变为8人了。其中最主要的离开创新班的原因：<strong>处理不好时间</strong>，到底我该去上课还是在实验室中做项目？在实验室做项目会耗费大量的时间，甚至为了完成功能熬夜，逃课。。。太痛苦，太累了。要忍受各种难听的话，各种改需求。而且最后很可能项目失败，不能上线，感觉自己的时间浪费了。</p>
<h2 id="到底创新班学的是什么？">到底创新班学的是什么？</h2>
<hr>
<blockquote>
<p><strong>学习的能力</strong><br><a id="more"></a></p>
</blockquote>
<p>这是老金一开始跟我们说的话。也是创新班培养人才的主要方向。但是很多人一直都没有听。很多人都没有想。说实在我是被老金的一些话吸引过来的。一个老师教你java，教你oracle数据库。就算是学会了，只不过是在适应这个领域的暂时的潮流，你可以在这个潮流中生存多少年？3年？5年？如果这个潮去了，面对一个新的东西你会怎样做？再去问老师吗？再进一个培训班学习？<br>所以高明的老师会懂得这个道理</p>
<blockquote>
<p><strong>授人以鱼不如授人以渔</strong></p>
</blockquote>
<p>传授学习的方法才是根本。培养学生的学习能力才是关键。</p>
<p><strong>但应试教育中很少有老师会教育学生怎样学习，这可能也是应试教育的一个弊端之一。</strong></p>
<h2 id="大学计算机专业应该学到什么知识？">大学计算机专业应该学到什么知识？</h2>
<hr>
<p><strong>计算机组成原理，数据结构，操作系统，编译原理</strong><br>这是老金说的，懂这四门你就懂计算机，不懂就不懂计算机。</p>
<blockquote>
<p>或者有的人觉得大学学了这几门课，连一个java程序，oracle数据库都写不好。我学这四门课有用吗？</p>
</blockquote>
<p>有！十分有用。计算机太抽象，我举个例子吧。《射雕英雄传》中郭靖以“笨”著称。而金庸却安排了七个师傅教他，单学一门郭靖就费力了，何况七个师傅各种武功。当大家都觉得长春赌约要输的时候。马钰暗地里教了郭靖全真教的内功。自此白天跟江南七怪学武，晚上跟马钰偷学内功。日复一日，江南七怪日渐觉得郭靖这个笨小子好像开窍了，身法越来越快，剑术等等也越来越好了。而江南七怪为什么不教内功，大概就是因为他们本身就不懂或者内功十分弱吧。</p>
<p>这就是为什么要学习上面几门的原因。而招聘人才的时候，考的题目大概也是从那四门课中出题，原因也特别简单，一般学生在大学不会接触到大型的项目，检验学生的能力和潜力就靠这几门课了。有潜力的学生难找，有开发经验的学生也难找啊。但如果你没有内功，就算你进入行业后也无法到达的一个比较高的高度。</p>
<h2 id="学习语言应该学深而不是学广">学习语言应该学深而不是学广</h2>
<hr>
<p>有些人，看到python大法好，豆瓣也是用它，跑去学；在论坛上看到php+mysql很厉害，facebook都是用它，然后抛弃了上面，跑去学；同学说javaee+oracle很厉害了，淘宝也是用这个的，然后抛弃了上面，跑去学；后来觉得还是c++效率高，跑去学c++；突然又发现go语言简洁明了，就如新世纪的c语言，跑去学c；最后发现go语言很多是参考python语法，然后去学python。。。</p>
<p>试问这样的人，你能学到什么？<br>你能明白 go的并发性模型吗？你能知道go的最大并发性是多少吗？java的设计模式是怎样的吗？能明白php有什么好处吗？能知道python强大的地方在哪里吗？</p>
<p><strong>其实这种人什么都不知道</strong>，但是就能在论坛上吹各种牛逼</p>
<p>而这个道理在《天龙八部》中论述了几遍了，就如萧峰在聚贤庄上使用入门武功“太祖长拳”对战“群雄”，慕容复精通各种武林招式被只懂六脉神剑一招的段誉打得狼狈不堪等等</p>
<p>真正体验你功夫的，永远不是招式的繁多，而是对招式的理解深度。同样一招太祖长拳，萧峰使出来的肯定就比其他人的好，使用得妙。</p>
<h2 id="怎样能快速的学习">怎样能快速的学习</h2>
<hr>
<h3 id="明白自己不是天才，自己只是个凡人">明白自己不是天才，自己只是个凡人</h3>
<hr>
<p>我曾经觉得自己打乒乓球有天分。我问我爸旋转球是怎样发的，他就凭空示范了一个普通的动作，但我却能根据这个动作将上旋，下旋，侧旋，侧下旋等一系列的东西学懂。路过少年宫看了一眼，教练教学生怎样正手推挡。我就会学会了这个动作，并根据这个动作学会了怎样拉弧圈球。一个从来没有进入少年宫等专业培训的人，却让人感觉这个人受过专业的培训。所以我也一直对父亲不让我去少年宫学打球这件事上不服。</p>
<p>但是看完《乒乓》的部动画之后，自己的感悟还是挺深的。自己或许是动画中的孔爷，或者是其中的风间，或者只是当中的恶魔，但肯定不是当中的星野和月本。或许你觉得这部片子太夸张，天才也没有这么夸张。但可怕的是<strong>现实就是这么的夸张</strong>。</p>
<p>举实际例子。那时是我刚高考完，那是番禺区中的村际比赛（市桥的不能没有参加），我记得有一个是思贤村的孩子，好像叫什么俊杰，跟我的年纪相当，但全场没有一个人够他打，包括一些教练和体校生，打团队赛基本就是他一个人拿2分再加上他爸打水线拿一分晋级的。村里的人说，家人大概在这个孩子学打乒乓球身上花了<strong>100多万</strong>，请国家队的教练教的。</p>
<p>当时我是怎样想的，这么厉害的人迟早能上国家队，现在能看到他的风姿还是幸运的。</p>
<p>看完《乒乓》的部片子之后，就觉得他之所以上不了国家队，大概国家队有些比他更有天赋的人存在。而我的天分相对于国家队的那些人来说连<strong>小聪明</strong>也不是。</p>
<p>而《乒乓》就是告诉你，有些人是有天赋的，天赋高得吓到你。你没有天赋不要紧，只要你对<strong>乒乓足够热爱</strong>，归于平凡，从中感受到快乐就好了。这大概也是那首《平凡之路》表达的思想吧。不得不说在这个浮躁的时代，歌曲都沉醉在金钱和爱情的漩涡之中，能有《平凡之路》的种歌出现实在时难得的</p>
<p>我的感觉在知乎<a href="http://www.zhihu.com/question/24111534" target="_blank" rel="external">如何解读《乒乓》这部动画?</a>票数最高的回答中找到共鸣。题外话，知乎真是个好地方，从各种方面来说。</p>
<p>而计算机方面，例子多不胜数。如果你是个天才，那么你能写出一个linux系统吗？能写出类似一个emacs那些神的编辑器吗？你能创造rss订阅吗？如果你是天才，你为计算机做出了什么？看了些传记，真正的天才不会觉得自己是天才，只是觉得对样东西感兴趣，一些东西也只是他们玩乐的成果。再如费曼先生所言</p>
<blockquote>
<p>记得在高中时，每天早上总有人拿些几何或高等数学的题目来考我，而我是不解开那些谜题便不罢休。通常我都要花上一二十分钟才找到答案；然后仔同一天内其他人也会问我同样的问题，那时我却可以不加思索便告诉他们答案。<strong>因此我在替第一个人解题时花掉20分钟，可是同时却有5个人以为我是天才</strong>。</p>
</blockquote>
<p>还是认清楚自己只是个凡人的事实吧</p>
<h3 id="努力，但实际上你还不够努力">努力，但实际上你还不够努力</h3>
<hr>
<p>这个是世界上对学渣来说最恐怖不是有天分的学渣不努力学习，而是比学渣聪明的人得多，能力全面且强大得多的人在拼命地学习。</p>
<p>就如<br>计算机算法的方面的楼天城，楼教主。ACM中经常能一个人能单挑团队。但他的努力是有目共睹的，<a href="http://www.cnblogs.com/gotodsp/articles/3932546.html" target="_blank" rel="external">详情</a></p>
<blockquote>
<p> 大学期间，天城和家里有个约定，除非有特殊情况比如生病，就只在而且必须在每周五晚上八点，和家人通个电话。母亲李秀玲说，没有一次，电话那头的儿子在玩或者在逛街，不是准备去教室看书，就是刚从实验室出来。</p>
</blockquote>
<p>电竞war3的全部人。（特别是sky，如果sky没有在wcg拿到冠军，让中国人第一次站在这个舞台的最高点，就没有今天的中国的电竞圈，也没有中国在TI4狂扫其中80%奖金的霸气，可能电竞只是在家长眼中耗费青春和荒废学业的职业吧。他就是凭借<strong>以一己之力将整个中国电竞带入辉煌的男人。</strong>可能没有一个世界冠军会有那种过着没有收入，默默打比赛，却住在网吧储物间的经历吧。他在电竞领域中的贡献，类比姚明，有过之无不及。详情可看他的自传《当李晓峰成为SKY》）</p>
<p>你的计算机的天分之于楼教主怎样，玩游戏的水平之于sky怎样？</p>
<p>有什么比学渣聪明的人得多却在拼命地学习和锻炼这个事实更恐怖？</p>
<h3 id="什么时候是学习最快？">什么时候是学习最快？</h3>
<hr>
<ul>
<li><p>要生存的时候<br>从动力上看，兴趣不是你最大的老师，生存才是。<br>明天要考试了，但是还没有复习，可能在那一天中你复习的效率高到爆表。就是你之前是多么喜欢这么学科，相信也没有那段时间快。</p>
</li>
<li><p>狠狠地摔一跤的时候**<br>我觉得自己学打乒乓球进步最快的时候，就是那好像六年级的暑假，当时我在祠堂也没有人比我强。但有一天与一位高手较量，被狠打11:1。那一分现在想想还是他让的。那一次让我自己的实力是如此的不济，就算在祠堂那里赢再多的球还是井底之蛙。但幸运的是他教我打球，大约用了二三天的时间把他教的直拍推挡略微掌握。但感觉打了这么多年球，还不如这两三天进度快。</p>
</li>
</ul>
<p>其实人当前的弱处，没有人比自己更清楚。最怕的就是自己欺骗自己，摔跤的原因很多，可能是你走路不带眼，撞到一块石头。但是你重新站起来的时候能意识你走路不带眼这个事实，继续欺骗自己我走路不带眼是正确的走路方法还是连走路要带眼都不知道呢？意识到这块石头存在的时候，你回绕过这块石头，移开这块石头，粉碎这块石头还是继续放在这里，下一次继续摔倒呢？</p>
<h3 id="学习还是需要思考的">学习还是需要思考的</h3>
<hr>
<p>当我在读小学，还在天真浪漫地享受乒乓球的乐趣的时候。一些老人有时会跟我们一起打一下乒乓球，打的时候会自己会暗示他们应该很厉害的吧，一开始打不够打，双打呢？还是不够打，但我们不在意，他们也不在意。就是玩一下吧，他们也就像逗孙子一样，玩一下吧。当我开始对乒乓球的旋转感兴趣的时候，问我爸旋转球是怎样发的。然后在这些老人身上试一下，结果十分简单地就打赢了他们了。因为那时业余到谁捡到球，谁发球。他们吃我“西”，就是吃我的侧上旋。（上旋中了就是球往上飞，下旋中了就是落网，侧旋就是往左往右飞）。球飞出台，且靠我比较近，于是我就获得几乎无限发球的机会。而他们中了之后只会说，为什么我打得这么大力，下次打得小力才行。而不是这球是怎样发的，为什么这球会让我打出界。</p>
<p>但那些老人其实也不是第一天打球，也不是第一天发球。但是他们从来没有想过发球转一下手腕会怎样，如果换个角度切进去球会怎样？</p>
<p>老金说的，一个创新班刚工作的师兄怒骂工作了20年的码农。其实这件事一点不荒谬，荒谬的是那位工作了20年的码农这20年到底做了什么事？是每天重复自己，每天重复自己还是每天重复自己呢？</p>
<h3 id="学习的方法">学习的方法</h3>
<hr>
<p>关于学习的方法，其实每个人经过这么多的考试，其实都有自己的一套学习的方法。不过我在这里还是推荐些大学学到的学习的方法吧</p>
<ul>
<li>番茄工作法</li>
</ul>
<blockquote>
<p>方法也很简单，使用番茄工作法，选择一个待完成的任务，将番茄时间设为25分钟，专注工作，中途不允许做任何与该任务无关的事，直到番茄时钟响起，然后在纸上画一个X短暂休息一下（5分钟就行），每4个番茄时段多休息一会儿。</p>
</blockquote>
<p>这个方法大概很多人都用过没有发表过(包括我)，但确实很有效。</p>
<ul>
<li>思维导图</li>
</ul>
<p>思维导图的原理也很简单，就是根据一个中心点配合一些关键字进行扩散，最好就是用图代替文字（图的信息量大且人脑对图片的识别程度比文字高）。<strong>新加坡教育部将思维导图列为小学必修科目</strong></p>
<ul>
<li>教就是最好的学习方法<br>Bob大叔：<blockquote>
<p>有一点我曾教给我儿子但是并没有出现在《程序员的职业素养》这本书中的建议是：最好的学习方法就是教授。</p>
</blockquote>
</li>
</ul>
<p>这种现象在创新班太明显了，太常见了。B问A问题，A毫无保留地将学到的东西教给B。然后，B每次有问题都会问A，自己不会谷歌百度，A有时会懂，有时不懂谷歌百度之后学懂告诉B。结果就是A越来越神，B就变成A养的猪。</p>
<p>所以老师越教越厉害肯定的，学生有没有变猪就不知道了。</p>
<p>所以刚进创新班的时候，老金才要让我们不要互相讨论技术问题，因为那时所谓的技术问题还没有难到谷歌百度不出来，需要自己造轮子才能解决。即使到现在，自己花很长时间没有解决问题，换一个成熟的程序员来做，也是分分钟的事！</p>
]]></content>
    <summary type="html">
    <![CDATA[有些人，看到python大法好，豆瓣也是用它，跑去学；在论坛上看到php+mysql很厉害，facebook都是用它，然后抛弃了上面，跑去学；同学说javaee+oracle很厉害了，淘宝也是用这个的，然后抛弃了上面，跑去学；后来觉得还是c++效率高，跑去学c++；突然又发现go语言简洁明了，就如新世纪的c语言，跑去学c；最后发现go语言很多是参考python语法，然后去学python。。。]]>
    
    </summary>
    
      <category term="观点与感想" scheme="http://cstzhanggj.github.io/tags/%E8%A7%82%E7%82%B9%E4%B8%8E%E6%84%9F%E6%83%B3/"/>
    
      <category term="编程感想" scheme="http://cstzhanggj.github.io/tags/%E7%BC%96%E7%A8%8B%E6%84%9F%E6%83%B3/"/>
    
      <category term="观点与感想" scheme="http://cstzhanggj.github.io/categories/%E8%A7%82%E7%82%B9%E4%B8%8E%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[1个好的程序员比得上100个垃圾程序员]]></title>
    <link href="http://cstzhanggj.github.io/2014/12/08/1vs100/"/>
    <id>http://cstzhanggj.github.io/2014/12/08/1vs100/</id>
    <published>2014-12-07T18:19:18.000Z</published>
    <updated>2015-01-14T17:45:45.000Z</updated>
    <content type="html"><![CDATA[<p>如果我是老板，1个好的程序员能完成一个功能，100个垃圾程序员用同样的时间也能完成一个功能。100个垃圾程序员月薪3000，一个好的程序员月薪10万。单看单价一个好的程序员太贵了，但是看总价，100个垃圾程序员要花30万，而一个好的程序员只需10万。对老板来说还是好的程序员划算。<br><a id="more"></a></p>
<h2 id="而什么是好的程序员">而什么是好的程序员</h2>
<hr>
<p>在我看来好的程序员：</p>
<ul>
<li>他的程序会加测试用例（保证可用）</li>
<li>对关键业务，访问十分频繁的业务会做压力测试（保证质量）</li>
<li>对函数和变量的命名十分合理，类与类之间的耦合度低（保证可维护）</li>
<li>不会做重复的轮子。对重复的代码会写一套框架完成，下一次做同一个功能的时候会十分的快</li>
</ul>
<p>而垃圾程序员肯定不会做到以上的几点。因为他们</p>
<ul>
<li>只会说自己为用vim，emacs，eclipse还是ide争个你死我活；</li>
<li>为了什么才是世界上最好的编程语言争个头破血流；</li>
<li>为了linux，windows，mac哪个是最好的开发平台而焦头烂额；</li>
<li>好像争赢就能写好代码似的；写代码只会复制黏贴；不想关于架构方面的问题；</li>
<li>从来不想自己为什么混到这种地步，只会埋怨老板不会欣赏自己，产品狗老改需求；</li>
<li>只顾着追求最新的技术或者不想自己缺乏的什么知识，而对没有看过的底层的知识嗤之以鼻；</li>
<li>自己催眠，认为自己很厉害，没想过世界上比自己厉害千倍万倍的人存在；</li>
</ul>
<p>如果我是老板，100个垃圾程序员月薪只需1000，跟一个好的程序员相比我也会请一个好的程序员。这是成本的问题。100个垃圾程序员记上电费还一定比好的程序员贵。而且时满足100个垃圾程序员月薪只需1000的条件下。如果是100个垃圾程序员月薪3000的话呢？这样我是老板招聘人才的时候就是自己不懂技术，5000千请人来帮我照聘好的程序员还是划算的。</p>
<h2 id="条件不成立呢？">条件不成立呢？</h2>
<hr>
<p>你或许会说这个结论是在“1个好的程序员能完成一个功能，100个垃圾程序员用同样的时间也能完成一个功能。”的条件成立之下，如果不成立了呢？</p>
<p>但不好意思，条件是一定成立的。一个简单的功能，简单到c#操作数据库增删改查，一个经验丰富的程序员做10分钟搞定。我们第一次做大多数人用了1个星期，有些人还用了1个多星期。100倍，还是要分档次的。一个复杂的内容，更不用说，垃圾程序员可能用一辈子也做不出。而且软件工程项目管控有个十分好玩的地方，道理类似于<strong>十个女人一个月也生不出一个孩子</strong>，详情请看计算机管控的神书《人月神话》。那些对计算机管控不感兴趣的人还是别看啦。乖乖打你的代码吧。</p>
]]></content>
    <summary type="html">
    <![CDATA[无论从任何角度1个好的程序员比得上100个垃圾程序员]]>
    
    </summary>
    
      <category term="编程感悟" scheme="http://cstzhanggj.github.io/tags/%E7%BC%96%E7%A8%8B%E6%84%9F%E6%82%9F/"/>
    
      <category term="观点与感想" scheme="http://cstzhanggj.github.io/tags/%E8%A7%82%E7%82%B9%E4%B8%8E%E6%84%9F%E6%83%B3/"/>
    
      <category term="观点与感想" scheme="http://cstzhanggj.github.io/categories/%E8%A7%82%E7%82%B9%E4%B8%8E%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[个人成长的日记]]></title>
    <link href="http://cstzhanggj.github.io/2014/12/08/the-choice-between-two-class/"/>
    <id>http://cstzhanggj.github.io/2014/12/08/the-choice-between-two-class/</id>
    <published>2014-12-07T16:23:57.000Z</published>
    <updated>2015-01-14T17:31:13.000Z</updated>
    <content type="html"><![CDATA[<p>大一暑假的时候，我是跟的时黄文凯。那时的项目是用的arduino板和红外线循迹技术控制小车进行“伐木”，现在想想那个项目觉得挺好笑了。在那里也交了些朋友，算是混得不错。面对这个抉择，我最后还是选择了我们院的老金的创新班。下面就是我的思考过程。<br><a id="more"></a></p>
<h2 id="学习c++?">学习c++?</h2>
<hr>
<p>还记得因为那时数学学院的人没有学过 c + +,后来黄文凯也让黎宇亮师兄（当时我也不知道他是老金的创新班的）但是计算机学院的人学过了，听起来觉得无什么味道。但对他说过的话有印象就几点。</p>
<ol>
<li>namespace 的用法，我们平时就只用<code>using namespace std；</code>但真的不知道有什么意义，虽然老师有提过，但也忘记。第一次看到有代码新开一个namespace用与避免类和函数的重复，还是挺震撼的。</li>
<li>他说要善于使用谷歌搜索，而不是百度</li>
<li>看到他的代码，代码量远远大于我们平时做作业和arduino的。问过师兄，那代码的功能好像是教室的麦克风什么的，现在就只记得他说调用的windows的控制面板实现这个功能。但他对自己完成功能的那种满足的表情我现在还十分记得。</li>
<li>他说自己大一c++挂科</li>
</ol>
<p>那时我在想，或许在黄文凯这个创新班会学到很多很多的东西，我以后也能编写这么帅的代码。</p>
<h2 id="4楼的是什么人？">4楼的是什么人？</h2>
<hr>
<p>在暑假的时候，我在5楼，我那时大概是11点左右就走了。但是每次走的时候，4楼的灯还亮着。而4楼是我们计算机学院的地方，也没听说大一的学生留在4楼搞项目。因为那时光电学院有学生在计算机楼跟老师学习java学习安卓，就觉得可能不是计算机学院的。那时我也很好奇4楼的是什么学院的人，我看到很多人在那里，跟黄文凯的创新班相比学习风气好像更浓。因为十分晚走。直到有次因为那个项目快到期，通了一个宵，发现4楼的人走的时间大概是1点左右。我那时觉得黄的创新班存在很多在打酱油，很晚回来很早走，而且很多时候不知道自己要做什么（这点上包括我）。所以就对4楼有点憧憬。</p>
<h2 id="学习java？">学习java？</h2>
<hr>
<p>听过第二项目要用到安卓平台。安卓是基于java的，然后我们自然都去看java。我去看视频，看各种各样的视频。最后发现看视频很耗时间，在视频中说的东西太细了。就跟读一本安卓的api差不多，没有什么味道。当时只想看完视频大概就能完全学懂java了吧。现在想起自己的想法确实十分可笑，java的80%的内容早在几章中说完，剩下的线程，时间之类，只是一个用java基本的语法进行包装。线程的知识，只要学好操作系统就会掌握得差不多，与是否是java毫无关系。但那个视频竟然能出了300多集。是的，是300多集说java。而且不设计任何基于java的ejb，spring，hibernate等框架。但那些视频是从培训班录制出来的。我不是说培训班什么不好，也有一些比较好的培训班，也有一些比较好的视频。但是从我现在的角度去看，如果培训班没有培养学生的学习的能力，没有教育学生关于计算机的本质。而且手把手教育学生计算机领域中最浮躁，最容易因为市场而发生改变的东西，我看来开培训班除了为了赚钱还是还是为了赚钱。</p>
<h2 id="老金的创新班？">老金的创新班？</h2>
<hr>
<p>大二上学期开学后，老金的创新班进行招生了。在暑假的时候有听过这件事，那时我们计算机学院的几个也在讨论这件事。纷纷觉得这里很好，没有必要去。那时，我还犹豫要不要去听老金的宣讲会。因为我那时已经在黄的创新班，所以就没有那个需求。但是看到宿舍的人都去了，想了想我还是去吧。现在想想，也幸亏这个决定，如果我没去肯定会十分后悔。</p>
<p>其实那时李洪波介绍老金的时候，说老金的学生都是<strong>万元户</strong>的时候，我就对老金的创新班十分感兴趣！因为金钱肯定是衡量一个人的重要指标。而万元户是什么概念，月入一万。大一下学期开学前我去做了一份为期3天的兼职，兼职的内容就是“又是一年艺考时，我在从中笑”。别想多了，我做的工作只是在门口收那些艺考的考生的简介。。。没有那个那个师兄幸福。我也是后来才知道那个师兄也是黄的创新班的，他的经历的acm到黄的创新班。在一次聊天中，他无意就说出了他下个学期会在uc实习。转正之后工资大概是5000还是6000。(他讲起他的工作地点是科韵路那里,那时我说起我知道地点在哪里的时候,他也吃惊为什么我知道,难道我也在那里工作过吗?其实我真的在那里工作过,只不过工作内容与编程无法,与卖联想电脑有关。现在想起联想idea精英汇,还是觉得亏欠精英汇太多了。月薪6000对当时的我是什么概念呢?我混得比较好的两个堂哥,一个是中国代理以色列魔雷音响的总经理,月薪是1万多吧;一个是中国移动南沙区的负责人,月薪是1万多吧。这是他们两年前的情况。现在可能更高了。月薪万元可能是我那时的人生目标了。而李洪波说<strong>万元户</strong>自然对我吸引力十足，而且是工作的第一年！。</p>
<p>而老金那时分析中国计算机就业的情况是这样的，需求量十分的大，但是就业率十分的低。忘记具体的数据，好像时需求量第一，但是就业率倒数第二。这表明计算机行业只招有能力的程序员。我对这句话的印象还是很深的。</p>
<p>老金那时更是说，我培养的是学生的学习能力，我有办法让学生在1个星期之内学会一种语言。那时我还太年轻了，觉得这个条件太吸引人了，但又开始质疑这句话的。现在想想过去的我，我那种想法还是太年轻了。在一个经验丰富的程序员面前语言算什么？1个星期学会一种语言对于老鸟来说还是太慢了吧。当然我不是说完完全全弄懂语言，我的意思是大体上能弄懂这门语言，如果用28原则解释的话，就是能弄懂这门语言的80%，其余的20%是这门语言的细节和精粹，需要he时间和经验去理解的。</p>
<h2 id="两个创新班之间的抉择">两个创新班之间的抉择</h2>
<hr>
<p>那时其实我时怀着半信半疑的态度来老金的创新班。我还没有明确向黄文凯说退出他的创新班。心里只是想看看老金的创新班到底是怎样的，如果我不喜欢这里，我还可以选择在黄文凯那里。但过了考核之后，已经完全没有想过离开老金的创新班了。</p>
<p>考核的内容是什么？ <strong>c#操作mysql数据库增删改差。</strong></p>
<p>但我没有学过c#，也没有学过mysql数据库。但就要你一个星期做出来。但最后我还真的做出来了。那时做出来的心情就好像完成了一条很难的数学题那样，很爽很有成就感，那种感觉太爽了。现在也很难找回那种感觉。</p>
<p>虽然，黄文凯那里有我的朋友，黄文凯对作为稀缺的计算机学院的学生的资源的我还算不错。但是我还是决定离去。原因很简单，<strong>人的不同。</strong></p>
<ol>
<li>在这里很多人都是拼命才能完成考核的，学习的氛围浓厚。</li>
<li>计算机学院的学生足够奇葩，很难找到其他学院的学生与我们臭味相投。我将我考核的代码借给其他学院的朋友交作业，这么简单的代码竟然拿了个A。其他学院的学生真的很难明白计算机是什么。</li>
<li>老金和黄文凯，老金的魅力比黄文凯大得多。黄文凯把你当成赚钱的工具，老金把你当成站在计算机这个专业面前年少无知的脑残。黄文凯那里教的是他已经掌握的电子知识，老金那里学到的学习的方法。黄文凯那里最多只能成为一个比较熟悉硬件的电子工程师，老金那里却是无限的可能。黄文凯maybe是个比较狭隘的人，当我说要离开的离开的时候，不停地再说老金的创新班有什么什么不好，只会做考试系统，被老金赶走的有很多人，上一届你们师兄大三的时候也接收很多在老金创新班离开的人等等。而跟老金比起来，老金显得洒脱得多，走就走，反正你走还是你的损失，你走跟我一点关系也没有，我的钱也不会赚小一分。而实际上，却实这样。走的人绝大部分都是自己离开的，不多不少也会后悔自己一时之气离开。</li>
<li>我跟老金有些地方还真的是臭味相投。讲话直接，对令人恶心的教学制度十分反感，对各个领域的都感兴趣。。。</li>
</ol>
<h2 id="还是感谢引路人">还是感谢引路人</h2>
<hr>
<p>除了父母，很少会有人会无条件地帮助人，指引你道路的人。那些人就是生命中的十分罕有的<strong>贵人</strong>。我算比较幸运，在乒乓球的领域我遇到不少这种人，不断地传授他们的经验。在计算机领域中遇到了老金。而且是两个我十分喜欢的领域，小时候我就觉得自己会打乒乓球打一辈子，现在也是这样觉得。现在只恨自己小时候没有接触到计算机编程。感谢老金。</p>
<ul>
<li>我从没有想过我可以写这么多的内容，虽然我还真的想过这种散乱的问题。刘未鹏说的<a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/" target="_blank" rel="external">为什么你应该（从现在开始就）写博客</a>还是相当有道理的</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>大一暑假的时候，我是跟的时黄文凯。那时的项目是用的arduino板和红外线循迹技术控制小车进行“伐木”，现在想想那个项目觉得挺好笑了。在那里也交了些朋友，算是混得不错。面对这个抉择，我最后还是选择了我们院的老金的创新班。下面就是我的思考过程。<br>]]>
    
    </summary>
    
      <category term="观点与感想" scheme="http://cstzhanggj.github.io/tags/%E8%A7%82%E7%82%B9%E4%B8%8E%E6%84%9F%E6%83%B3/"/>
    
      <category term="编程感想" scheme="http://cstzhanggj.github.io/tags/%E7%BC%96%E7%A8%8B%E6%84%9F%E6%83%B3/"/>
    
      <category term="观点与感想" scheme="http://cstzhanggj.github.io/categories/%E8%A7%82%E7%82%B9%E4%B8%8E%E6%84%9F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[golang的数组切片和map]]></title>
    <link href="http://cstzhanggj.github.io/2014/12/01/golang-slice-and-map/"/>
    <id>http://cstzhanggj.github.io/2014/12/01/golang-slice-and-map/</id>
    <published>2014-12-01T11:26:47.000Z</published>
    <updated>2015-01-14T17:33:44.000Z</updated>
    <content type="html"><![CDATA[<h1 id="数组切片">数组切片</h1>
<p>数组的长度在定义之后无法再次修改，而数组切片就是来弥补数组的不足的</p>
<a id="more"></a>

<h2 id="1-直接创建数组切片">1.直接创建数组切片</h2>
<p>数组切片本质上来说就是数组，所以初始化就可以这样写</p>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">slice：=[]<span class="typename">int</span><span class="number">{1</span><span class="number">,2</span><span class="number">,3</span><span class="number">,4</span><span class="number">,5</span>}</div></pre></td></tr></table></figure>

<p>也可以用make来初始化数组切片<br>格式：为<code>slice：=make([]type,len,cap)</code> 或者 <code>slice：=make([]type,cap)</code><br>其中：<br><strong>len：已经赋值的元素单元</strong><br><strong>cap：切片元素单元的个数</strong></p>
<ul>
<li>例子如下:</li>
</ul>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">slice := <span class="built_in">make</span>([]<span class="typename">int</span><span class="number">,5</span>)    <span class="comment">//创建一个初始元素个数为5的数组切片，元素初始值为0</span></div><div class="line">slice := <span class="built_in">make</span>([]<span class="typename">int</span><span class="number">,5</span><span class="number">,10</span>) <span class="comment">//创建一个初始元素个数为5的数组切片，元素初始值为0，并预留10个元素的存储空间</span></div></pre></td></tr></table></figure>

<h2 id="2-元素遍历">2.元素遍历</h2>
<ul>
<li>用for循环遍历</li>
</ul>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span> printArray(array []<span class="typename">int</span>){</div><div class="line">	<span class="keyword">for</span> i:<span class="number">=0</span> ; i&lt; <span class="built_in">len</span>(array) ; i++{</div><div class="line">		fmt.Println(<span class="string">"Array element["</span>,i,<span class="string">"] = "</span>, array[i])</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>

<ul>
<li>使用range遍历</li>
</ul>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span> printArray(array []<span class="typename">int</span>){</div><div class="line">	<span class="keyword">for</span> i,v := <span class="keyword">range</span> array{</div><div class="line">		fmt.Println(<span class="string">"Array element["</span>,i,<span class="string">"] = "</span>, v)</div><div class="line">	}</div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="3-基于数组创建">3.基于数组创建</h2>
<p>语法: <code>slice := array[first:last]</code><br>例子如下</p>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Array := []<span class="typename">int</span><span class="number">{1</span><span class="number">,2</span><span class="number">,3</span><span class="number">,4</span><span class="number">,5</span>} <span class="comment">//定义数组</span></div><div class="line"></div><div class="line"><span class="comment">//切处 Array[1] ~ Array[5]之间的值</span></div><div class="line">slice := Array<span class="number">[1</span><span class="number">:5</span>] <span class="comment">// 结果时 2 3 4 5</span></div><div class="line">printArray(slice)</div><div class="line"></div><div class="line"><span class="comment">//切除全部</span></div><div class="line">slice = Array[:] <span class="comment">// 结果 1 2 3 4 5</span></div><div class="line">printArray(slice)</div><div class="line"></div><div class="line"><span class="comment">//切出前3</span></div><div class="line">slice = Array[<span class="number">:3</span>] <span class="comment">// 结果 1 2 3</span></div><div class="line">printArray(slice)</div><div class="line"></div><div class="line"><span class="comment">//切出后3</span></div><div class="line">slice = Array<span class="number">[2</span>:] <span class="comment">// 结果 3 4 5</span></div><div class="line">printArray(slice)</div></pre></td></tr></table></figure>

<h2 id="4-数组切片的复制">4.数组切片的复制</h2>
<p>用于将内容从一个数组切片赋值到另一个数组切片。如果加入数组切片不一样大，就会按其中较小的那个数组切片的元素个数进行赋值</p>
<p>语法如下:<br><code>copy(source,target)</code></p>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">slice1 := []<span class="typename">int</span><span class="number">{1</span><span class="number">,2</span><span class="number">,3</span>}</div><div class="line">slice2 := []<span class="typename">int</span><span class="number">{4</span><span class="number">,5</span><span class="number">,6</span><span class="number">,7</span><span class="number">,8</span>}</div><div class="line">slice3 := []<span class="typename">int</span><span class="number">{9</span><span class="number">,10</span><span class="number">,11</span><span class="number">,12</span>}</div><div class="line"><span class="built_in">copy</span>(slice1,slice2) <span class="comment">// slice1 = {4,5,6}</span></div><div class="line"><span class="built_in">copy</span>(slice2,slice3) <span class="comment">// slice2 = {9,10,11,12}</span></div></pre></td></tr></table></figure>

<h2 id="5-添加元素">5.添加元素</h2>
<p>如：<br>有一个数组</p>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">slice：= []<span class="typename">int</span><span class="number">{1</span><span class="number">,2</span><span class="number">,3</span>}</div></pre></td></tr></table></figure>

<p>想往一个数组中添加元素,可以使用append()函数<br>语法：</p>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">slice = <span class="built_in">append</span>(slide,slice1,slice2...)</div></pre></td></tr></table></figure>

<ul>
<li>其中 …为多个参数</li>
</ul>
<p>如：</p>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">slice = <span class="built_in">append</span>(slice<span class="number">,4</span><span class="number">,5</span><span class="number">,6</span>)</div></pre></td></tr></table></figure>

<p>结合len，cap等足够应付平时的开发<br>这里值得注意的是，数组切片会自动处理存储空间不足的问题。如果追加的内容长度超过当前已分配的存储空间，数组切片会自动分配一块足够大的内存</p>
<h1 id="Map">Map</h1>
<p>map，中文翻译为哈希表，在<code>python</code>中也称字典。是一种十分高效的key-value数据结构</p>
<p>不多讲废话，直接上程序</p>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></div><div class="line"></div><div class="line"><span class="keyword">type</span> User <span class="keyword">struct</span>{</div><div class="line">	tid <span class="typename">int</span></div><div class="line">	userName <span class="typename">string</span></div><div class="line">	pwd <span class="typename">string</span></div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">func</span> main() {</div><div class="line">	<span class="keyword">var</span> UserDB <span class="keyword">map</span>[<span class="typename">string</span>] User</div><div class="line">	UserDB = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="typename">string</span>] User)</div><div class="line"></div><div class="line">	<span class="comment">//插入数据</span></div><div class="line">	UserDB[<span class="string">"zhang"</span>] = User<span class="number">{1</span>, <span class="string">"张全蛋"</span>, <span class="string">"123456"</span>}</div><div class="line">	UserDB[<span class="string">"li"</span>]    = User<span class="number">{2</span>, <span class="string">"李小花"</span>, <span class="string">"123456"</span>}</div><div class="line">	UserDB[<span class="string">"zhao"</span>] = User<span class="number">{3</span>, <span class="string">"赵铁柱"</span>, <span class="string">"123456"</span>}</div><div class="line"></div><div class="line">	<span class="comment">//查找</span></div><div class="line">	value ,ok:= UserDB[<span class="string">"li"</span>]</div><div class="line">	<span class="keyword">if</span> ok { <span class="comment">//找到值了</span></div><div class="line">		fmt.Println(<span class="string">"li"</span>,value)</div><div class="line">	}<span class="keyword">else</span>{</div><div class="line">		fmt.Println(<span class="string">"没有该值"</span>)</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="comment">//删除</span></div><div class="line">	<span class="built_in">delete</span>(UserDB,<span class="string">"zhao"</span>)</div><div class="line">	value ,ok = UserDB[<span class="string">"zhao"</span>]</div><div class="line">	<span class="keyword">if</span> ok { <span class="comment">//找到值了</span></div><div class="line">		fmt.Println(<span class="string">"li"</span>,value)</div><div class="line">	}<span class="keyword">else</span>{</div><div class="line">		fmt.Println(<span class="string">"没有该值"</span>)</div><div class="line">	}</div><div class="line"></div><div class="line">}</div></pre></td></tr></table></figure>

<p>以上就是map的基本的操作，下面再说说map声明和创建，因为其他的语句太清晰明了了</p>
<h2 id="1-_变量的声明">1. 变量的声明</h2>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myMap <span class="keyword">map</span>[<span class="keyword">type</span>] Value</div></pre></td></tr></table></figure>

<p>其中，myMap是声明的变量名，type是key的类型可以是string，int等等，而Value是要存储的值的类型，可以是int，string或者是结构体</p>
<h2 id="2-_map的创建">2. map的创建</h2>
<ul>
<li>可以使用 make()函数来创建一个新map<br>如：</li>
</ul>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UserDB = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="typename">string</span>] User)</div></pre></td></tr></table></figure>

<p>也可以选择是否在创建时指定该map的初始存储能力，如：</p>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UserDB = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="typename">string</span>] User<span class="number">，100</span>)</div></pre></td></tr></table></figure>

<ul>
<li>直接创建并赋值</li>
</ul>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">UserDB:= <span class="keyword">map</span>[<span class="typename">string</span>] User{</div><div class="line">	<span class="string">"zhang"</span> : User<span class="number">{1</span>, <span class="string">"张全蛋"</span>, <span class="string">"123456"</span>},</div><div class="line">	<span class="string">"li"</span>	: User<span class="number">{2</span>, <span class="string">"李小花"</span>, <span class="string">"123456"</span>},</div><div class="line">	<span class="string">"zhao"</span>  : User<span class="number">{3</span>, <span class="string">"赵铁柱"</span>, <span class="string">"123456"</span>},</div><div class="line">}</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[golang的数组切片和哈希表]]>
    
    </summary>
    
      <category term="golang" scheme="http://cstzhanggj.github.io/tags/golang/"/>
    
      <category term="golang" scheme="http://cstzhanggj.github.io/categories/golang/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu安装jdk]]></title>
    <link href="http://cstzhanggj.github.io/2014/11/26/ubuntu-install-javaSDk/"/>
    <id>http://cstzhanggj.github.io/2014/11/26/ubuntu-install-javaSDk/</id>
    <published>2014-11-26T06:52:59.000Z</published>
    <updated>2014-11-26T06:54:39.000Z</updated>
    <content type="html"><![CDATA[<h3 id="首先在官网下载一个_JDK">首先在官网下载一个 JDK</h3>
<p>sudo gedit ~/.profile</p>
<p>export JAVA_HOME=/home/zhang/sdk/java/jdk1.8.0_20<br>export JRE_HOME=$JAVA_HOME/jre<br>export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH<br>export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</p>
<p>source ~/.profile</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="首先在官网下载一个_JDK">首先在官网下载一个 JDK</h3>
<p>sudo gedit ~/.profile</p>
<p>export JAVA_HOME=/home/zhang/sdk/java/jdk1.8.0_20<br>export JRE_HO]]>
    </summary>
    
      <category term="ubuntu" scheme="http://cstzhanggj.github.io/tags/ubuntu/"/>
    
      <category term="ubuntu" scheme="http://cstzhanggj.github.io/categories/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu 打开键盘背光]]></title>
    <link href="http://cstzhanggj.github.io/2014/11/26/ubuntu-backlight/"/>
    <id>http://cstzhanggj.github.io/2014/11/26/ubuntu-backlight/</id>
    <published>2014-11-26T06:30:37.000Z</published>
    <updated>2014-11-26T06:33:56.000Z</updated>
    <content type="html"><![CDATA[<p>打开终端使用该命令<br>xmodmap -e “add mod3 =Scroll_Lock”</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>打开终端使用该命令<br>xmodmap -e “add mod3 =Scroll_Lock”</p>
]]>
    </summary>
    
      <category term="ubuntu" scheme="http://cstzhanggj.github.io/tags/ubuntu/"/>
    
      <category term="ubuntu" scheme="http://cstzhanggj.github.io/categories/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[golang操作Mysql进行CRUD]]></title>
    <link href="http://cstzhanggj.github.io/2014/11/21/golang-mysql/"/>
    <id>http://cstzhanggj.github.io/2014/11/21/golang-mysql/</id>
    <published>2014-11-20T16:57:36.000Z</published>
    <updated>2015-01-14T17:41:17.000Z</updated>
    <content type="html"><![CDATA[<h2 id="对操作mysql数据库进行简单的面向对象封装">对操作mysql数据库进行简单的面向对象封装</h2>
<hr>
<h3 id="基本的结构体">基本的结构体</h3>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> dbConn <span class="keyword">struct</span>{</div><div class="line">	db *sql.DB</div><div class="line">	tx *sql.Tx</div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">func</span> NewDBConn()(*dbConn){</div><div class="line">	<span class="keyword">return</span> &dbConn{}</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="初始化数据库">初始化数据库</h3>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span> (conn *dbConn)Init()(error){</div><div class="line">	<span class="keyword">var</span> err error</div><div class="line">	conn.db,err = sql.Open(<span class="string">"mysql"</span>,<span class="string">"root:root@tcp(localhost:3306)/salehouse?charset=utf8"</span>);</div><div class="line">	<span class="keyword">if</span> err!=<span class="constant">nil</span>{</div><div class="line">		<span class="keyword">return</span> ErrorMsg(<span class="string">"不能链接数据库"</span>,err)</div><div class="line">	}</div><div class="line">	err=conn.Begin()</div><div class="line">	<span class="keyword">return</span> ErrorMsg(<span class="string">""</span>,err)</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="重写begin函数">重写begin函数</h3>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span> (conn *dbConn) Begin()(error){</div><div class="line">	<span class="keyword">var</span> err error</div><div class="line">	conn.tx,err=conn.db.Begin() <span class="comment">//赋值给tx</span></div><div class="line">	<span class="keyword">return</span> ErrorMsg(<span class="string">""</span>,err)</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="重写close函数">重写close函数</h3>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span> (conn *dbConn) Close()(error){</div><div class="line">	<span class="keyword">if</span>(conn.IsNULL()){</div><div class="line">		<span class="keyword">return</span> ErrorMsg(<span class="string">"连接数据库为空"</span>,<span class="constant">nil</span>)</div><div class="line">	}</div><div class="line">	conn.db.Close()</div><div class="line">	conn.db = <span class="constant">nil</span></div><div class="line">	<span class="keyword">return</span> ErrorMsg(<span class="string">""</span>,<span class="constant">nil</span>)</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="判断时候为空">判断时候为空</h3>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span> (conn *dbConn)IsNULL()(<span class="typename">bool</span>){</div><div class="line">	<span class="keyword">return</span> conn.db==<span class="constant">nil</span></div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="简单的错误信息">简单的错误信息</h3>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span> ErrorMsg(msg <span class="typename">string</span>,err error)(error){</div><div class="line">	<span class="keyword">if</span>(err==<span class="constant">nil</span>){</div><div class="line">		<span class="keyword">if</span>(msg==<span class="string">""</span>){</div><div class="line">			<span class="keyword">return</span> err</div><div class="line">		}</div><div class="line">		<span class="keyword">return</span> errors.New(msg)</div><div class="line">	}</div><div class="line">	<span class="keyword">return</span> err</div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="假设现在操作的人员的表_对应的表user如下:">假设现在操作的人员的表 对应的表user如下:</h3>
<figure class="highlight golang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> User <span class="keyword">struct</span>{</div><div class="line">	Tid <span class="typename">int</span></div><div class="line">	account <span class="typename">string</span></div><div class="line">	pwd <span class="typename">string</span></div><div class="line">}</div><div class="line"></div><div class="line"><span class="keyword">func</span> NewUser(tid <span class="typename">int</span>,account <span class="typename">string</span> ,pwd <span class="typename">string</span>)(User){</div><div class="line">	<span class="keyword">return</span>  User{<span class="string">"tid"</span>:tid,<span class="string">"account"</span>:account,<span class="string">"pwd"</span>:pwd}</div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="CRUD操作">CRUD操作</h2>
<hr>
<h3 id="查找">查找</h3>
<h4 id="使用_db-Query_获取多行数据">使用 db.Query 获取多行数据</h4>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span> (conn dbConn)GetUser()([]User,error){</div><div class="line">	users:=<span class="built_in">make</span>([]User<span class="number">,20</span>)</div><div class="line">	<span class="keyword">if</span>(conn.IsNULL()){</div><div class="line">		<span class="keyword">return</span> users,ErrorMsg(<span class="string">"连接数据库为空"</span>,<span class="constant">nil</span>)</div><div class="line">	}</div><div class="line">	rows,err := conn.db.Query(<span class="string">"select tid,account,pwd from demo_user"</span>);</div><div class="line">	<span class="keyword">if</span> err!=<span class="constant">nil</span> {</div><div class="line">		<span class="keyword">return</span> users,ErrorMsg(<span class="string">"查询失败"</span>,<span class="constant">nil</span>)</div><div class="line">	}</div><div class="line">	<span class="keyword">defer</span> rows.Close();</div><div class="line">	cols,_ :=  rows.Columns();</div><div class="line">	<span class="keyword">for</span> i := <span class="keyword">range</span> cols { <span class="comment">//查看表的列</span></div><div class="line">		fmt.Print(cols[i]);</div><div class="line">		fmt.Print(<span class="string">"\t"</span>);</div><div class="line">	}</div><div class="line">	fmt.Print(<span class="string">"\n"</span>);</div><div class="line">	i:<span class="number">=0</span></div><div class="line">	user:=User{}</div><div class="line">	<span class="keyword">for</span> rows.Next(){</div><div class="line">		<span class="keyword">if</span> err := rows.Scan(&user.Tid,&user.Account,&user.Pwd);err==<span class="constant">nil</span> {</div><div class="line">			<span class="keyword">if</span> i &lt;<span class="number"> 20</span> {</div><div class="line">				users[i] = user</div><div class="line">			}<span class="keyword">else</span>{</div><div class="line">				users = <span class="built_in">append</span>(users,user)</div><div class="line">			}</div><div class="line">			i++;</div><div class="line">		}</div><div class="line">	}</div><div class="line">	newUser:=users[:i]</div><div class="line"></div><div class="line">	<span class="keyword">return</span> newUser,ErrorMsg(<span class="string">"连接数据库为空"</span>,<span class="constant">nil</span>)</div><div class="line">}</div></pre></td></tr></table></figure>

<h4 id="使用_QueryRow_获取单条数据">使用 QueryRow 获取单条数据</h4>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span>(conn dbConn)GetUserCount()(<span class="typename">int</span>,error){</div><div class="line">	<span class="keyword">var</span> num <span class="typename">int</span> =<span class="number"> 0</span></div><div class="line">	<span class="keyword">if</span>(conn.IsNULL()){</div><div class="line">		<span class="keyword">return</span> num,ErrorMsg(<span class="string">"连接数据库为空"</span>,<span class="constant">nil</span>)</div><div class="line">	}</div><div class="line">	err:=conn.db.QueryRow(<span class="string">"select count(tid) from demo_user"</span>).Scan(&num)</div><div class="line">	<span class="keyword">if</span>(err!=<span class="constant">nil</span>){</div><div class="line">		<span class="keyword">return</span> num,ErrorMsg(<span class="string">"查询失败"</span>,<span class="constant">nil</span>)</div><div class="line">	}</div><div class="line">	<span class="keyword">return</span> num,<span class="constant">nil</span></div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="增删改">增删改</h3>
<ul>
<li>在这里我先说好使用要使用的sql语句</li>
</ul>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> (</div><div class="line">	insert <span class="typename">string</span> = <span class="string">"insert into demo_user(account,pwd)values(?,?)"</span></div><div class="line">	update <span class="typename">string</span> = <span class="string">"update demo_user set account=?,pwd=? where tid=?"</span></div><div class="line">	<span class="built_in">delete</span> <span class="typename">string</span> = <span class="string">"delete from demo_user where tid=?"</span></div><div class="line">)</div></pre></td></tr></table></figure>

<hr>
<h4 id="使用_Exec执行sql语句">使用 Exec执行sql语句</h4>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span> (conn dbConn)SQLExec(sql <span class="typename">string</span>,params ...<span class="keyword">interface</span>{})(sql.Result,error){</div><div class="line">	<span class="keyword">if</span>(conn.IsNULL()){</div><div class="line">		<span class="keyword">return</span> <span class="constant">nil</span>, ErrorMsg(<span class="string">"连接数据库为空"</span>,<span class="constant">nil</span>)</div><div class="line">	}</div><div class="line">	result,err:=conn.db.Exec(sql,params...)</div><div class="line">	<span class="keyword">return</span> result,ErrorMsg(<span class="string">""</span>,err)</div><div class="line">}</div></pre></td></tr></table></figure>



<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span> main(){</div><div class="line">	conn:=NewDBConn()</div><div class="line">	err :=conn.Init()</div><div class="line">	<span class="keyword">if</span>(err!=<span class="constant">nil</span>){</div><div class="line">		fmt.Println(<span class="string">"不能初始化数据库"</span>)</div><div class="line">	}</div><div class="line">	result,_:=conn.SQLExec(insert,<span class="string">"赵四"</span><span class="number">,123465</span>)</div><div class="line">	resultid,_:= result.LastInsertId()</div><div class="line">	conn.SQLExec(<span class="built_in">delete</span>,resultid)</div><div class="line">	conn.SQLExec(insert,<span class="string">"王九"</span><span class="number">,123465</span>)</div><div class="line">	result,_ = conn.SQLExec(insert,<span class="string">"宋七"</span><span class="number">,123465</span>)</div><div class="line">	resultid,_ = result.LastInsertId()</div><div class="line">	conn.SQLExec(update,<span class="string">"宋七"</span><span class="number">,456798</span>,resultid)</div><div class="line">	conn.Close()</div><div class="line">}</div></pre></td></tr></table></figure>

<hr>
<h4 id="使用*stmt处理数据">使用*stmt处理数据</h4>
<p>当你使用<code>prepare</code>的时候会返回一个<code>*Stmt</code>对象</p>
<ul>
<li>但是你<strong>不能这样写</strong>，如：<code>_,err:=conn.db.Prepare(sql)</code></li>
</ul>
<p>因为，使用了<code>prepare</code>之后MySql会新建一个连接，如果你这样写的话，会新建一个连接，但是不能通过<code>Stmt.Close()</code>关闭这个连接。</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span> (conn *dbConn) SQLDBStmt(sql <span class="typename">string</span>,params ...<span class="keyword">interface</span>{})(sql.Result,error){</div><div class="line">	<span class="keyword">if</span>(conn.IsNULL()){</div><div class="line">		<span class="keyword">return</span> <span class="constant">nil</span>, ErrorMsg(<span class="string">"连接数据库为空"</span>,<span class="constant">nil</span>)</div><div class="line">	}</div><div class="line">	Stmt,err:=conn.db.Prepare(sql) <span class="comment">// 返回*stmt指针</span></div><div class="line">	<span class="keyword">if</span>(err!=<span class="constant">nil</span>){</div><div class="line">		<span class="keyword">return</span> <span class="constant">nil</span>,ErrorMsg(<span class="string">"Prepare出错"</span>,<span class="constant">nil</span>)</div><div class="line">	}</div><div class="line">	<span class="keyword">defer</span>  Stmt.Close()</div><div class="line">	result,err2:=Stmt.Exec(params...)</div><div class="line">	<span class="keyword">return</span> result,ErrorMsg(<span class="string">""</span>,err2)</div><div class="line">}</div></pre></td></tr></table></figure>

<p>先使用sql.db.prepar的方法获取<em>stmt,这样可以在</em>stmt关闭之前处理大量的数据</p>
<h4 id="使用sql-tx配合*stmt处理">使用sql.tx配合*stmt处理</h4>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">func</span> (conn *dbConn) SQLTxStmt(sql <span class="typename">string</span>,params ...<span class="keyword">interface</span>{})(sql.Result,error){</div><div class="line">	<span class="keyword">if</span>(conn.IsNULL()){</div><div class="line">		<span class="keyword">return</span> <span class="constant">nil</span>, ErrorMsg(<span class="string">"连接数据库为空"</span>,<span class="constant">nil</span>)</div><div class="line">	}</div><div class="line">	Stmt,err:=conn.db.Prepare(sql)</div><div class="line">	<span class="keyword">if</span>(err!=<span class="constant">nil</span>){</div><div class="line">		<span class="keyword">return</span>  <span class="constant">nil</span>,ErrorMsg(<span class="string">"Prepare出错"</span>,<span class="constant">nil</span>)</div><div class="line">	}</div><div class="line">	<span class="keyword">defer</span> Stmt.Close()</div><div class="line">	result,err2:=Stmt.Exec(params...)</div><div class="line">	<span class="keyword">if</span> err2!=<span class="constant">nil</span> {</div><div class="line">		conn.tx.Rollback()</div><div class="line">		<span class="keyword">return</span> result,ErrorMsg(<span class="string">""</span>,err2)</div><div class="line">	}</div><div class="line">	conn.tx.Commit()</div><div class="line">	<span class="keyword">return</span> result,ErrorMsg(<span class="string">""</span>,<span class="constant">nil</span>)</div><div class="line">}</div></pre></td></tr></table></figure>

<p><em>tx指针时在一开始<code>DB.begin()</code>函数中获取的,而</em>stmt也能从<code>tx.prepare()</code>函数中获取<br>对比<em>db,</em>tx最大的好处就是可以进行<code>Rollback()</code>处理</p>
<ul>
<li><p>什么是Rollback呢?<br>业务的回滚</p>
</li>
<li><p>有什么好处呢?<br>比如说要插数据到三个表中,在插入数据到最后一个表失败,你是不是要把前两个表插入的数据删除。<br>而rollback的好处就是让数据回归到没有操作之前的状态。</p>
</li>
<li><p>事务完成或者失败一定要<code>commit</code>或者<code>rollback</code><br>原因是：<code>begin</code>的时候Mysql会新建一个连接，所以一定要通过<code>commit</code>或者<code>rollback</code>，将这个连接关闭</p>
</li>
</ul>
<hr>
<ul>
<li><a href="https://github.com/go-sql-driver/mysql/wiki/Examples" target="_blank" rel="external">官方例子</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[golangd对Mysql增删改查]]>
    
    </summary>
    
      <category term="golang" scheme="http://cstzhanggj.github.io/tags/golang/"/>
    
      <category term="mysql" scheme="http://cstzhanggj.github.io/tags/mysql/"/>
    
      <category term="golang" scheme="http://cstzhanggj.github.io/categories/golang/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo常用命令]]></title>
    <link href="http://cstzhanggj.github.io/2014/11/20/hexo_common_Commands/"/>
    <id>http://cstzhanggj.github.io/2014/11/20/hexo_common_Commands/</id>
    <published>2014-11-20T11:39:22.000Z</published>
    <updated>2014-12-12T17:30:24.000Z</updated>
    <content type="html"><![CDATA[<h2 id="新建一个文档">新建一个文档</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>

<h2 id="运行服务器">运行服务器</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>

<h2 id="生成静态文件">生成静态文件</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>

<ul>
<li>你想把一些文档删除但发现那些标签和分类没有删除时,可以将<strong>db.json</strong>删掉再使用上述命令</li>
</ul>
<h2 id="提交到github">提交到github</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>

<p>更多的可以参考 <a href="http://zipperary.com/2013/05/29/hexo-guide-3/" target="_blank" rel="external">这里</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="新建一个文档">新建一个文档</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class=]]>
    </summary>
    
      <category term="hexo" scheme="http://cstzhanggj.github.io/tags/hexo/"/>
    
      <category term="hexo" scheme="http://cstzhanggj.github.io/categories/hexo/"/>
    
  </entry>
  
</feed>
